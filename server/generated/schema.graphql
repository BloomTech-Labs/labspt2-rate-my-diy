### This file was autogenerated by Nexus 0.11.5
### Do not make changes to this file directly


type AggregateComment {
  count: Int!
}

type AggregateProject {
  count: Int!
}

type AggregateReview {
  count: Int!
}

type AggregateStepArray {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Comment {
  editedAt: DateTime!
  id: ID!
  text: String!
  User: User!
}

type CommentConnection {
  aggregate: AggregateComment!
  edges: [CommentEdge!]!
  pageInfo: PageInfo!
}

input CommentCreateInput {
  editedAt: DateTime!
  text: String!
  User: UserCreateOneInput!
}

input CommentCreateManyInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateInput!]
}

type CommentEdge {
  cursor: String!
  node: Comment!
}

enum CommentOrderByInput {
  createdAt_ASC
  createdAt_DESC
  editedAt_ASC
  editedAt_DESC
  id_ASC
  id_DESC
  text_ASC
  text_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  editedAt: DateTime
  editedAt_gt: DateTime
  editedAt_gte: DateTime
  editedAt_in: [DateTime!]
  editedAt_lt: DateTime
  editedAt_lte: DateTime
  editedAt_not: DateTime
  editedAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  text: String
  text_contains: String
  text_ends_with: String
  text_gt: String
  text_gte: String
  text_in: [String!]
  text_lt: String
  text_lte: String
  text_not: String
  text_not_contains: String
  text_not_ends_with: String
  text_not_in: [String!]
  text_not_starts_with: String
  text_starts_with: String
}

input CommentUpdateDataInput {
  editedAt: DateTime
  text: String
  User: UserUpdateOneRequiredInput
}

input CommentUpdateInput {
  editedAt: DateTime
  text: String
  User: UserUpdateOneRequiredInput
}

input CommentUpdateManyDataInput {
  editedAt: DateTime
  text: String
}

input CommentUpdateManyInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueNestedInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  upsert: [CommentUpsertWithWhereUniqueNestedInput!]
}

input CommentUpdateManyMutationInput {
  editedAt: DateTime
  text: String
}

input CommentUpdateManyWithWhereNestedInput {
  data: CommentUpdateManyDataInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateWithWhereUniqueNestedInput {
  data: CommentUpdateDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueNestedInput {
  create: CommentCreateInput!
  update: CommentUpdateDataInput!
  where: CommentWhereUniqueInput!
}

input CommentWhereInput {
  AND: [CommentWhereInput!]
  editedAt: DateTime
  editedAt_gt: DateTime
  editedAt_gte: DateTime
  editedAt_in: [DateTime!]
  editedAt_lt: DateTime
  editedAt_lte: DateTime
  editedAt_not: DateTime
  editedAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  text: String
  text_contains: String
  text_ends_with: String
  text_gt: String
  text_gte: String
  text_in: [String!]
  text_lt: String
  text_lte: String
  text_not: String
  text_not_contains: String
  text_not_ends_with: String
  text_not_in: [String!]
  text_not_starts_with: String
  text_starts_with: String
  User: UserWhereInput
}

input CommentWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Long

type Mutation {
  createComment(data: CommentCreateInput!): Comment!
  createProject(data: ProjectCreateInput!): Project!
  createReview(data: ReviewCreateInput!): Review!
  createStepArray(data: StepArrayCreateInput!): StepArray!
  createSubscription(source: String): User!
  createUser(data: UserCreateInput!): User!
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  deleteManyProjects(where: ProjectWhereInput): BatchPayload!
  deleteManyReviews(where: ReviewWhereInput): BatchPayload!
  deleteManyStepArrays(where: StepArrayWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteProject(where: ProjectWhereUniqueInput!): Project
  deleteReview(where: ReviewWhereUniqueInput!): Review
  deleteUser(where: UserWhereUniqueInput!): User
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateManyComments(data: CommentUpdateManyMutationInput!, where: CommentWhereInput): BatchPayload!
  updateManyProjects(data: ProjectUpdateManyMutationInput!, where: ProjectWhereInput): BatchPayload!
  updateManyReviews(data: ReviewUpdateManyMutationInput!, where: ReviewWhereInput): BatchPayload!
  updateManyStepArrays(data: StepArrayUpdateManyMutationInput!, where: StepArrayWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  upsertComment(create: CommentCreateInput!, update: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment!
  upsertProject(create: ProjectCreateInput!, update: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project!
  upsertReview(create: ReviewCreateInput!, update: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review!
  upsertUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Project {
  category: String!
  id: ID!
  name: String!
  rating: Float!
  Reviews(after: String, before: String, first: Int, last: Int, orderBy: ReviewOrderByInput, skip: Int, where: ReviewWhereInput): [Review!]
  Steps(after: String, before: String, first: Int, last: Int, orderBy: StepArrayOrderByInput, skip: Int, where: StepArrayWhereInput): [StepArray!]
  timestamp: DateTime!
  titleBlurb: String!
  titleImg: String!
  User(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
}

type ProjectConnection {
  aggregate: AggregateProject!
  edges: [ProjectEdge!]!
  pageInfo: PageInfo!
}

input ProjectCreateInput {
  category: String!
  name: String!
  rating: Float
  Reviews: ReviewCreateManyInput
  Steps: StepArrayCreateManyInput
  timestamp: DateTime!
  titleBlurb: String!
  titleImg: String!
  User: UserCreateManyWithoutProjectsInput
}

input ProjectCreateManyWithoutUserInput {
  connect: [ProjectWhereUniqueInput!]
  create: [ProjectCreateWithoutUserInput!]
}

input ProjectCreateWithoutUserInput {
  category: String!
  name: String!
  rating: Float
  Reviews: ReviewCreateManyInput
  Steps: StepArrayCreateManyInput
  timestamp: DateTime!
  titleBlurb: String!
  titleImg: String!
}

type ProjectEdge {
  cursor: String!
  node: Project!
}

enum ProjectOrderByInput {
  category_ASC
  category_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  rating_ASC
  rating_DESC
  timestamp_ASC
  timestamp_DESC
  titleBlurb_ASC
  titleBlurb_DESC
  titleImg_ASC
  titleImg_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProjectScalarWhereInput {
  AND: [ProjectScalarWhereInput!]
  category: String
  category_contains: String
  category_ends_with: String
  category_gt: String
  category_gte: String
  category_in: [String!]
  category_lt: String
  category_lte: String
  category_not: String
  category_not_contains: String
  category_not_ends_with: String
  category_not_in: [String!]
  category_not_starts_with: String
  category_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ProjectScalarWhereInput!]
  OR: [ProjectScalarWhereInput!]
  rating: Float
  rating_gt: Float
  rating_gte: Float
  rating_in: [Float!]
  rating_lt: Float
  rating_lte: Float
  rating_not: Float
  rating_not_in: [Float!]
  timestamp: DateTime
  timestamp_gt: DateTime
  timestamp_gte: DateTime
  timestamp_in: [DateTime!]
  timestamp_lt: DateTime
  timestamp_lte: DateTime
  timestamp_not: DateTime
  timestamp_not_in: [DateTime!]
  titleBlurb: String
  titleBlurb_contains: String
  titleBlurb_ends_with: String
  titleBlurb_gt: String
  titleBlurb_gte: String
  titleBlurb_in: [String!]
  titleBlurb_lt: String
  titleBlurb_lte: String
  titleBlurb_not: String
  titleBlurb_not_contains: String
  titleBlurb_not_ends_with: String
  titleBlurb_not_in: [String!]
  titleBlurb_not_starts_with: String
  titleBlurb_starts_with: String
  titleImg: String
  titleImg_contains: String
  titleImg_ends_with: String
  titleImg_gt: String
  titleImg_gte: String
  titleImg_in: [String!]
  titleImg_lt: String
  titleImg_lte: String
  titleImg_not: String
  titleImg_not_contains: String
  titleImg_not_ends_with: String
  titleImg_not_in: [String!]
  titleImg_not_starts_with: String
  titleImg_starts_with: String
}

input ProjectUpdateInput {
  category: String
  name: String
  rating: Float
  Reviews: ReviewUpdateManyInput
  Steps: StepArrayUpdateManyInput
  timestamp: DateTime
  titleBlurb: String
  titleImg: String
  User: UserUpdateManyWithoutProjectsInput
}

input ProjectUpdateManyDataInput {
  category: String
  name: String
  rating: Float
  timestamp: DateTime
  titleBlurb: String
  titleImg: String
}

input ProjectUpdateManyMutationInput {
  category: String
  name: String
  rating: Float
  timestamp: DateTime
  titleBlurb: String
  titleImg: String
}

input ProjectUpdateManyWithoutUserInput {
  connect: [ProjectWhereUniqueInput!]
  create: [ProjectCreateWithoutUserInput!]
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ProjectUpdateManyWithWhereNestedInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutUserInput!]
}

input ProjectUpdateManyWithWhereNestedInput {
  data: ProjectUpdateManyDataInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateWithoutUserDataInput {
  category: String
  name: String
  rating: Float
  Reviews: ReviewUpdateManyInput
  Steps: StepArrayUpdateManyInput
  timestamp: DateTime
  titleBlurb: String
  titleImg: String
}

input ProjectUpdateWithWhereUniqueWithoutUserInput {
  data: ProjectUpdateWithoutUserDataInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithWhereUniqueWithoutUserInput {
  create: ProjectCreateWithoutUserInput!
  update: ProjectUpdateWithoutUserDataInput!
  where: ProjectWhereUniqueInput!
}

input ProjectWhereInput {
  AND: [ProjectWhereInput!]
  category: String
  category_contains: String
  category_ends_with: String
  category_gt: String
  category_gte: String
  category_in: [String!]
  category_lt: String
  category_lte: String
  category_not: String
  category_not_contains: String
  category_not_ends_with: String
  category_not_in: [String!]
  category_not_starts_with: String
  category_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ProjectWhereInput!]
  OR: [ProjectWhereInput!]
  rating: Float
  rating_gt: Float
  rating_gte: Float
  rating_in: [Float!]
  rating_lt: Float
  rating_lte: Float
  rating_not: Float
  rating_not_in: [Float!]
  Reviews_every: ReviewWhereInput
  Reviews_none: ReviewWhereInput
  Reviews_some: ReviewWhereInput
  Steps_every: StepArrayWhereInput
  Steps_none: StepArrayWhereInput
  Steps_some: StepArrayWhereInput
  timestamp: DateTime
  timestamp_gt: DateTime
  timestamp_gte: DateTime
  timestamp_in: [DateTime!]
  timestamp_lt: DateTime
  timestamp_lte: DateTime
  timestamp_not: DateTime
  timestamp_not_in: [DateTime!]
  titleBlurb: String
  titleBlurb_contains: String
  titleBlurb_ends_with: String
  titleBlurb_gt: String
  titleBlurb_gte: String
  titleBlurb_in: [String!]
  titleBlurb_lt: String
  titleBlurb_lte: String
  titleBlurb_not: String
  titleBlurb_not_contains: String
  titleBlurb_not_ends_with: String
  titleBlurb_not_in: [String!]
  titleBlurb_not_starts_with: String
  titleBlurb_starts_with: String
  titleImg: String
  titleImg_contains: String
  titleImg_ends_with: String
  titleImg_gt: String
  titleImg_gte: String
  titleImg_in: [String!]
  titleImg_lt: String
  titleImg_lte: String
  titleImg_not: String
  titleImg_not_contains: String
  titleImg_not_ends_with: String
  titleImg_not_in: [String!]
  titleImg_not_starts_with: String
  titleImg_starts_with: String
  User_every: UserWhereInput
  User_none: UserWhereInput
  User_some: UserWhereInput
}

input ProjectWhereUniqueInput {
  id: ID
}

type Query {
  comment(where: CommentWhereUniqueInput!): Comment
  comments(after: String, before: String, first: Int, last: Int, orderBy: CommentOrderByInput, skip: Int, where: CommentWhereInput): [Comment!]!
  commentsConnection(after: String, before: String, first: Int, last: Int, orderBy: CommentOrderByInput, skip: Int, where: CommentWhereInput): CommentConnection!
  project(where: ProjectWhereUniqueInput!): Project
  projects(after: String, before: String, first: Int, last: Int, orderBy: ProjectOrderByInput, skip: Int, where: ProjectWhereInput): [Project!]!
  projectsConnection(after: String, before: String, first: Int, last: Int, orderBy: ProjectOrderByInput, skip: Int, where: ProjectWhereInput): ProjectConnection!
  review(where: ReviewWhereUniqueInput!): Review
  reviews(after: String, before: String, first: Int, last: Int, orderBy: ReviewOrderByInput, skip: Int, where: ReviewWhereInput): [Review!]!
  reviewsConnection(after: String, before: String, first: Int, last: Int, orderBy: ReviewOrderByInput, skip: Int, where: ReviewWhereInput): ReviewConnection!
  stepArrays(after: String, before: String, first: Int, last: Int, orderBy: StepArrayOrderByInput, skip: Int, where: StepArrayWhereInput): [StepArray!]!
  stepArraysConnection(after: String, before: String, first: Int, last: Int, orderBy: StepArrayOrderByInput, skip: Int, where: StepArrayWhereInput): StepArrayConnection!
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  usersConnection(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): UserConnection!
}

type Review {
  Author: User!
  Comments(after: String, before: String, first: Int, last: Int, orderBy: CommentOrderByInput, skip: Int, where: CommentWhereInput): [Comment!]
  editedAt: String!
  id: ID!
  rating: Float!
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String!
  title: String!
}

type ReviewConnection {
  aggregate: AggregateReview!
  edges: [ReviewEdge!]!
  pageInfo: PageInfo!
}

input ReviewCreateInput {
  Author: UserCreateOneWithoutReviewListInput!
  Comments: CommentCreateManyInput
  editedAt: String!
  rating: Float
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String!
  title: String!
}

input ReviewCreateManyInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateInput!]
}

input ReviewCreateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutAuthorInput!]
}

input ReviewCreateWithoutAuthorInput {
  Comments: CommentCreateManyInput
  editedAt: String!
  rating: Float
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String!
  title: String!
}

type ReviewEdge {
  cursor: String!
  node: Review!
}

enum ReviewOrderByInput {
  createdAt_ASC
  createdAt_DESC
  editedAt_ASC
  editedAt_DESC
  id_ASC
  id_DESC
  rating_ASC
  rating_DESC
  reviewThumbsDown_ASC
  reviewThumbsDown_DESC
  reviewThumbsUp_ASC
  reviewThumbsUp_DESC
  text_ASC
  text_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ReviewScalarWhereInput {
  AND: [ReviewScalarWhereInput!]
  editedAt: String
  editedAt_contains: String
  editedAt_ends_with: String
  editedAt_gt: String
  editedAt_gte: String
  editedAt_in: [String!]
  editedAt_lt: String
  editedAt_lte: String
  editedAt_not: String
  editedAt_not_contains: String
  editedAt_not_ends_with: String
  editedAt_not_in: [String!]
  editedAt_not_starts_with: String
  editedAt_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  rating: Float
  rating_gt: Float
  rating_gte: Float
  rating_in: [Float!]
  rating_lt: Float
  rating_lte: Float
  rating_not: Float
  rating_not_in: [Float!]
  reviewThumbsDown: Int
  reviewThumbsDown_gt: Int
  reviewThumbsDown_gte: Int
  reviewThumbsDown_in: [Int!]
  reviewThumbsDown_lt: Int
  reviewThumbsDown_lte: Int
  reviewThumbsDown_not: Int
  reviewThumbsDown_not_in: [Int!]
  reviewThumbsUp: Int
  reviewThumbsUp_gt: Int
  reviewThumbsUp_gte: Int
  reviewThumbsUp_in: [Int!]
  reviewThumbsUp_lt: Int
  reviewThumbsUp_lte: Int
  reviewThumbsUp_not: Int
  reviewThumbsUp_not_in: [Int!]
  text: String
  text_contains: String
  text_ends_with: String
  text_gt: String
  text_gte: String
  text_in: [String!]
  text_lt: String
  text_lte: String
  text_not: String
  text_not_contains: String
  text_not_ends_with: String
  text_not_in: [String!]
  text_not_starts_with: String
  text_starts_with: String
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

input ReviewUpdateDataInput {
  Author: UserUpdateOneRequiredWithoutReviewListInput
  Comments: CommentUpdateManyInput
  editedAt: String
  rating: Float
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String
  title: String
}

input ReviewUpdateInput {
  Author: UserUpdateOneRequiredWithoutReviewListInput
  Comments: CommentUpdateManyInput
  editedAt: String
  rating: Float
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String
  title: String
}

input ReviewUpdateManyDataInput {
  editedAt: String
  rating: Float
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String
  title: String
}

input ReviewUpdateManyInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueNestedInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueNestedInput!]
}

input ReviewUpdateManyMutationInput {
  editedAt: String
  rating: Float
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String
  title: String
}

input ReviewUpdateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutAuthorInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  data: ReviewUpdateManyDataInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateWithoutAuthorDataInput {
  Comments: CommentUpdateManyInput
  editedAt: String
  rating: Float
  reviewThumbsDown: Int
  reviewThumbsUp: Int
  text: String
  title: String
}

input ReviewUpdateWithWhereUniqueNestedInput {
  data: ReviewUpdateDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  data: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueNestedInput {
  create: ReviewCreateInput!
  update: ReviewUpdateDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  create: ReviewCreateWithoutAuthorInput!
  update: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewWhereInput {
  AND: [ReviewWhereInput!]
  Author: UserWhereInput
  Comments_every: CommentWhereInput
  Comments_none: CommentWhereInput
  Comments_some: CommentWhereInput
  editedAt: String
  editedAt_contains: String
  editedAt_ends_with: String
  editedAt_gt: String
  editedAt_gte: String
  editedAt_in: [String!]
  editedAt_lt: String
  editedAt_lte: String
  editedAt_not: String
  editedAt_not_contains: String
  editedAt_not_ends_with: String
  editedAt_not_in: [String!]
  editedAt_not_starts_with: String
  editedAt_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  rating: Float
  rating_gt: Float
  rating_gte: Float
  rating_in: [Float!]
  rating_lt: Float
  rating_lte: Float
  rating_not: Float
  rating_not_in: [Float!]
  reviewThumbsDown: Int
  reviewThumbsDown_gt: Int
  reviewThumbsDown_gte: Int
  reviewThumbsDown_in: [Int!]
  reviewThumbsDown_lt: Int
  reviewThumbsDown_lte: Int
  reviewThumbsDown_not: Int
  reviewThumbsDown_not_in: [Int!]
  reviewThumbsUp: Int
  reviewThumbsUp_gt: Int
  reviewThumbsUp_gte: Int
  reviewThumbsUp_in: [Int!]
  reviewThumbsUp_lt: Int
  reviewThumbsUp_lte: Int
  reviewThumbsUp_not: Int
  reviewThumbsUp_not_in: [Int!]
  text: String
  text_contains: String
  text_ends_with: String
  text_gt: String
  text_gte: String
  text_in: [String!]
  text_lt: String
  text_lte: String
  text_not: String
  text_not_contains: String
  text_not_ends_with: String
  text_not_in: [String!]
  text_not_starts_with: String
  text_starts_with: String
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

input ReviewWhereUniqueInput {
  id: ID
}

type StepArray {
  imgUrls: String
  textBlurbs: String
}

type StepArrayConnection {
  aggregate: AggregateStepArray!
  edges: [StepArrayEdge!]!
  pageInfo: PageInfo!
}

input StepArrayCreateInput {
  imgUrls: String
  textBlurbs: String
}

input StepArrayCreateManyInput {
  create: [StepArrayCreateInput!]
}

type StepArrayEdge {
  cursor: String!
  node: StepArray!
}

enum StepArrayOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  imgUrls_ASC
  imgUrls_DESC
  textBlurbs_ASC
  textBlurbs_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input StepArrayScalarWhereInput {
  AND: [StepArrayScalarWhereInput!]
  imgUrls: String
  imgUrls_contains: String
  imgUrls_ends_with: String
  imgUrls_gt: String
  imgUrls_gte: String
  imgUrls_in: [String!]
  imgUrls_lt: String
  imgUrls_lte: String
  imgUrls_not: String
  imgUrls_not_contains: String
  imgUrls_not_ends_with: String
  imgUrls_not_in: [String!]
  imgUrls_not_starts_with: String
  imgUrls_starts_with: String
  NOT: [StepArrayScalarWhereInput!]
  OR: [StepArrayScalarWhereInput!]
  textBlurbs: String
  textBlurbs_contains: String
  textBlurbs_ends_with: String
  textBlurbs_gt: String
  textBlurbs_gte: String
  textBlurbs_in: [String!]
  textBlurbs_lt: String
  textBlurbs_lte: String
  textBlurbs_not: String
  textBlurbs_not_contains: String
  textBlurbs_not_ends_with: String
  textBlurbs_not_in: [String!]
  textBlurbs_not_starts_with: String
  textBlurbs_starts_with: String
}

input StepArrayUpdateManyDataInput {
  imgUrls: String
  textBlurbs: String
}

input StepArrayUpdateManyInput {
  create: [StepArrayCreateInput!]
  deleteMany: [StepArrayScalarWhereInput!]
  updateMany: [StepArrayUpdateManyWithWhereNestedInput!]
}

input StepArrayUpdateManyMutationInput {
  imgUrls: String
  textBlurbs: String
}

input StepArrayUpdateManyWithWhereNestedInput {
  data: StepArrayUpdateManyDataInput!
  where: StepArrayScalarWhereInput!
}

input StepArrayWhereInput {
  AND: [StepArrayWhereInput!]
  imgUrls: String
  imgUrls_contains: String
  imgUrls_ends_with: String
  imgUrls_gt: String
  imgUrls_gte: String
  imgUrls_in: [String!]
  imgUrls_lt: String
  imgUrls_lte: String
  imgUrls_not: String
  imgUrls_not_contains: String
  imgUrls_not_ends_with: String
  imgUrls_not_in: [String!]
  imgUrls_not_starts_with: String
  imgUrls_starts_with: String
  NOT: [StepArrayWhereInput!]
  OR: [StepArrayWhereInput!]
  textBlurbs: String
  textBlurbs_contains: String
  textBlurbs_ends_with: String
  textBlurbs_gt: String
  textBlurbs_gte: String
  textBlurbs_in: [String!]
  textBlurbs_lt: String
  textBlurbs_lte: String
  textBlurbs_not: String
  textBlurbs_not_contains: String
  textBlurbs_not_ends_with: String
  textBlurbs_not_in: [String!]
  textBlurbs_not_starts_with: String
  textBlurbs_starts_with: String
}

type User {
  accountType: String!
  email: String!
  id: ID!
  makerRating: Float
  password: String!
  privilege: String!
  Projects(after: String, before: String, first: Int, last: Int, orderBy: ProjectOrderByInput, skip: Int, where: ProjectWhereInput): [Project!]
  reviewerThumbs: Int
  ReviewList(after: String, before: String, first: Int, last: Int, orderBy: ReviewOrderByInput, skip: Int, where: ReviewWhereInput): [Review!]
  stripeId: String
  url: String
  username: String!
  userProfileImage: String!
}

type UserConnection {
  aggregate: AggregateUser!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

input UserCreateInput {
  accountType: String
  email: String!
  makerRating: Float
  password: String!
  privilege: String!
  Projects: ProjectCreateManyWithoutUserInput
  reviewerThumbs: Int
  ReviewList: ReviewCreateManyWithoutAuthorInput
  stripeId: String
  url: String
  username: String!
  userProfileImage: String
}

input UserCreateManyWithoutProjectsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutProjectsInput!]
}

input UserCreateOneInput {
  connect: UserWhereUniqueInput
  create: UserCreateInput
}

input UserCreateOneWithoutReviewListInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReviewListInput
}

input UserCreateWithoutProjectsInput {
  accountType: String
  email: String!
  makerRating: Float
  password: String!
  privilege: String!
  reviewerThumbs: Int
  ReviewList: ReviewCreateManyWithoutAuthorInput
  stripeId: String
  url: String
  username: String!
  userProfileImage: String
}

input UserCreateWithoutReviewListInput {
  accountType: String
  email: String!
  makerRating: Float
  password: String!
  privilege: String!
  Projects: ProjectCreateManyWithoutUserInput
  reviewerThumbs: Int
  stripeId: String
  url: String
  username: String!
  userProfileImage: String
}

type UserEdge {
  cursor: String!
  node: User!
}

enum UserOrderByInput {
  accountType_ASC
  accountType_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  makerRating_ASC
  makerRating_DESC
  password_ASC
  password_DESC
  privilege_ASC
  privilege_DESC
  reviewerThumbs_ASC
  reviewerThumbs_DESC
  stripeId_ASC
  stripeId_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
  username_ASC
  username_DESC
  userProfileImage_ASC
  userProfileImage_DESC
}

input UserScalarWhereInput {
  accountType: String
  accountType_contains: String
  accountType_ends_with: String
  accountType_gt: String
  accountType_gte: String
  accountType_in: [String!]
  accountType_lt: String
  accountType_lte: String
  accountType_not: String
  accountType_not_contains: String
  accountType_not_ends_with: String
  accountType_not_in: [String!]
  accountType_not_starts_with: String
  accountType_starts_with: String
  AND: [UserScalarWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  makerRating: Float
  makerRating_gt: Float
  makerRating_gte: Float
  makerRating_in: [Float!]
  makerRating_lt: Float
  makerRating_lte: Float
  makerRating_not: Float
  makerRating_not_in: [Float!]
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  privilege: String
  privilege_contains: String
  privilege_ends_with: String
  privilege_gt: String
  privilege_gte: String
  privilege_in: [String!]
  privilege_lt: String
  privilege_lte: String
  privilege_not: String
  privilege_not_contains: String
  privilege_not_ends_with: String
  privilege_not_in: [String!]
  privilege_not_starts_with: String
  privilege_starts_with: String
  reviewerThumbs: Int
  reviewerThumbs_gt: Int
  reviewerThumbs_gte: Int
  reviewerThumbs_in: [Int!]
  reviewerThumbs_lt: Int
  reviewerThumbs_lte: Int
  reviewerThumbs_not: Int
  reviewerThumbs_not_in: [Int!]
  stripeId: String
  stripeId_contains: String
  stripeId_ends_with: String
  stripeId_gt: String
  stripeId_gte: String
  stripeId_in: [String!]
  stripeId_lt: String
  stripeId_lte: String
  stripeId_not: String
  stripeId_not_contains: String
  stripeId_not_ends_with: String
  stripeId_not_in: [String!]
  stripeId_not_starts_with: String
  stripeId_starts_with: String
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
  userProfileImage: String
  userProfileImage_contains: String
  userProfileImage_ends_with: String
  userProfileImage_gt: String
  userProfileImage_gte: String
  userProfileImage_in: [String!]
  userProfileImage_lt: String
  userProfileImage_lte: String
  userProfileImage_not: String
  userProfileImage_not_contains: String
  userProfileImage_not_ends_with: String
  userProfileImage_not_in: [String!]
  userProfileImage_not_starts_with: String
  userProfileImage_starts_with: String
}

input UserUpdateDataInput {
  accountType: String
  email: String
  makerRating: Float
  password: String
  privilege: String
  Projects: ProjectUpdateManyWithoutUserInput
  reviewerThumbs: Int
  ReviewList: ReviewUpdateManyWithoutAuthorInput
  stripeId: String
  url: String
  username: String
  userProfileImage: String
}

input UserUpdateInput {
  accountType: String
  email: String
  makerRating: Float
  password: String
  privilege: String
  Projects: ProjectUpdateManyWithoutUserInput
  reviewerThumbs: Int
  ReviewList: ReviewUpdateManyWithoutAuthorInput
  stripeId: String
  url: String
  username: String
  userProfileImage: String
}

input UserUpdateManyDataInput {
  accountType: String
  email: String
  makerRating: Float
  password: String
  privilege: String
  reviewerThumbs: Int
  stripeId: String
  url: String
  username: String
  userProfileImage: String
}

input UserUpdateManyMutationInput {
  accountType: String
  email: String
  makerRating: Float
  password: String
  privilege: String
  reviewerThumbs: Int
  stripeId: String
  url: String
  username: String
  userProfileImage: String
}

input UserUpdateManyWithoutProjectsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutProjectsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutProjectsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutProjectsInput!]
}

input UserUpdateManyWithWhereNestedInput {
  data: UserUpdateManyDataInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredInput {
  connect: UserWhereUniqueInput
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredWithoutReviewListInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReviewListInput
  update: UserUpdateWithoutReviewListDataInput
  upsert: UserUpsertWithoutReviewListInput
}

input UserUpdateWithoutProjectsDataInput {
  accountType: String
  email: String
  makerRating: Float
  password: String
  privilege: String
  reviewerThumbs: Int
  ReviewList: ReviewUpdateManyWithoutAuthorInput
  stripeId: String
  url: String
  username: String
  userProfileImage: String
}

input UserUpdateWithoutReviewListDataInput {
  accountType: String
  email: String
  makerRating: Float
  password: String
  privilege: String
  Projects: ProjectUpdateManyWithoutUserInput
  reviewerThumbs: Int
  stripeId: String
  url: String
  username: String
  userProfileImage: String
}

input UserUpdateWithWhereUniqueWithoutProjectsInput {
  data: UserUpdateWithoutProjectsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertNestedInput {
  create: UserCreateInput!
  update: UserUpdateDataInput!
}

input UserUpsertWithoutReviewListInput {
  create: UserCreateWithoutReviewListInput!
  update: UserUpdateWithoutReviewListDataInput!
}

input UserUpsertWithWhereUniqueWithoutProjectsInput {
  create: UserCreateWithoutProjectsInput!
  update: UserUpdateWithoutProjectsDataInput!
  where: UserWhereUniqueInput!
}

input UserWhereInput {
  accountType: String
  accountType_contains: String
  accountType_ends_with: String
  accountType_gt: String
  accountType_gte: String
  accountType_in: [String!]
  accountType_lt: String
  accountType_lte: String
  accountType_not: String
  accountType_not_contains: String
  accountType_not_ends_with: String
  accountType_not_in: [String!]
  accountType_not_starts_with: String
  accountType_starts_with: String
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  makerRating: Float
  makerRating_gt: Float
  makerRating_gte: Float
  makerRating_in: [Float!]
  makerRating_lt: Float
  makerRating_lte: Float
  makerRating_not: Float
  makerRating_not_in: [Float!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  privilege: String
  privilege_contains: String
  privilege_ends_with: String
  privilege_gt: String
  privilege_gte: String
  privilege_in: [String!]
  privilege_lt: String
  privilege_lte: String
  privilege_not: String
  privilege_not_contains: String
  privilege_not_ends_with: String
  privilege_not_in: [String!]
  privilege_not_starts_with: String
  privilege_starts_with: String
  Projects_every: ProjectWhereInput
  Projects_none: ProjectWhereInput
  Projects_some: ProjectWhereInput
  reviewerThumbs: Int
  reviewerThumbs_gt: Int
  reviewerThumbs_gte: Int
  reviewerThumbs_in: [Int!]
  reviewerThumbs_lt: Int
  reviewerThumbs_lte: Int
  reviewerThumbs_not: Int
  reviewerThumbs_not_in: [Int!]
  ReviewList_every: ReviewWhereInput
  ReviewList_none: ReviewWhereInput
  ReviewList_some: ReviewWhereInput
  stripeId: String
  stripeId_contains: String
  stripeId_ends_with: String
  stripeId_gt: String
  stripeId_gte: String
  stripeId_in: [String!]
  stripeId_lt: String
  stripeId_lte: String
  stripeId_not: String
  stripeId_not_contains: String
  stripeId_not_ends_with: String
  stripeId_not_in: [String!]
  stripeId_not_starts_with: String
  stripeId_starts_with: String
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
  userProfileImage: String
  userProfileImage_contains: String
  userProfileImage_ends_with: String
  userProfileImage_gt: String
  userProfileImage_gte: String
  userProfileImage_in: [String!]
  userProfileImage_lt: String
  userProfileImage_lte: String
  userProfileImage_not: String
  userProfileImage_not_contains: String
  userProfileImage_not_ends_with: String
  userProfileImage_not_in: [String!]
  userProfileImage_not_starts_with: String
  userProfileImage_starts_with: String
}

input UserWhereUniqueInput {
  email: String
  id: ID
  username: String
}
