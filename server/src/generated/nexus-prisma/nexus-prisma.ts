/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../../../../src/generated/prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Review: ReviewObject
      Project: ProjectObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      ProjectConnection: ProjectConnectionObject
      ProjectEdge: ProjectEdgeObject
      AggregateProject: AggregateProjectObject
      ReviewConnection: ReviewConnectionObject
      ReviewEdge: ReviewEdgeObject
      AggregateReview: AggregateReviewObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      ProjectSubscriptionPayload: ProjectSubscriptionPayloadObject
      ProjectPreviousValues: ProjectPreviousValuesObject
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadObject
      ReviewPreviousValues: ReviewPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Review: ReviewFieldDetails
      Project: ProjectFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      ProjectConnection: ProjectConnectionFieldDetails
      ProjectEdge: ProjectEdgeFieldDetails
      AggregateProject: AggregateProjectFieldDetails
      ReviewConnection: ReviewConnectionFieldDetails
      ReviewEdge: ReviewEdgeFieldDetails
      AggregateReview: AggregateReviewFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      ProjectSubscriptionPayload: ProjectSubscriptionPayloadFieldDetails
      ProjectPreviousValues: ProjectPreviousValuesFieldDetails
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadFieldDetails
      ReviewPreviousValues: ReviewPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      ReviewWhereInput: ReviewWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      ProjectWhereInput: ProjectWhereInputInputObject
      ProjectWhereUniqueInput: ProjectWhereUniqueInputInputObject
      ReviewWhereUniqueInput: ReviewWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInputInputObject
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInputInputObject
      UserCreateManyWithoutLikedReviewsInput: UserCreateManyWithoutLikedReviewsInputInputObject
      UserCreateWithoutLikedReviewsInput: UserCreateWithoutLikedReviewsInputInputObject
      ReviewCreateManyWithoutDislikedByInput: ReviewCreateManyWithoutDislikedByInputInputObject
      ReviewCreateWithoutDislikedByInput: ReviewCreateWithoutDislikedByInputInputObject
      UserCreateOneWithoutReviewListInput: UserCreateOneWithoutReviewListInputInputObject
      UserCreateWithoutReviewListInput: UserCreateWithoutReviewListInputInputObject
      ReviewCreateManyWithoutLikedByInput: ReviewCreateManyWithoutLikedByInputInputObject
      ReviewCreateWithoutLikedByInput: ReviewCreateWithoutLikedByInputInputObject
      UserCreateManyWithoutDislikedReviewsInput: UserCreateManyWithoutDislikedReviewsInputInputObject
      UserCreateWithoutDislikedReviewsInput: UserCreateWithoutDislikedReviewsInputInputObject
      ProjectCreateManyWithoutUserInput: ProjectCreateManyWithoutUserInputInputObject
      ProjectCreateWithoutUserInput: ProjectCreateWithoutUserInputInputObject
      ProjectCreateratingInput: ProjectCreateratingInputInputObject
      ReviewCreateManyWithoutProjectReviewedInput: ReviewCreateManyWithoutProjectReviewedInputInputObject
      ReviewCreateWithoutProjectReviewedInput: ReviewCreateWithoutProjectReviewedInputInputObject
      UserCreateManyWithoutRatedProjectsInput: UserCreateManyWithoutRatedProjectsInputInputObject
      UserCreateWithoutRatedProjectsInput: UserCreateWithoutRatedProjectsInputInputObject
      ProjectCreateManyWithoutRatedByInput: ProjectCreateManyWithoutRatedByInputInputObject
      ProjectCreateWithoutRatedByInput: ProjectCreateWithoutRatedByInputInputObject
      UserCreateOneWithoutProjectsInput: UserCreateOneWithoutProjectsInputInputObject
      UserCreateWithoutProjectsInput: UserCreateWithoutProjectsInputInputObject
      ProjectCreateOneWithoutReviewsInput: ProjectCreateOneWithoutReviewsInputInputObject
      ProjectCreateWithoutReviewsInput: ProjectCreateWithoutReviewsInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInputInputObject
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInputInputObject
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInputInputObject
      UserUpdateManyWithoutLikedReviewsInput: UserUpdateManyWithoutLikedReviewsInputInputObject
      UserUpdateWithWhereUniqueWithoutLikedReviewsInput: UserUpdateWithWhereUniqueWithoutLikedReviewsInputInputObject
      UserUpdateWithoutLikedReviewsDataInput: UserUpdateWithoutLikedReviewsDataInputInputObject
      ReviewUpdateManyWithoutDislikedByInput: ReviewUpdateManyWithoutDislikedByInputInputObject
      ReviewUpdateWithWhereUniqueWithoutDislikedByInput: ReviewUpdateWithWhereUniqueWithoutDislikedByInputInputObject
      ReviewUpdateWithoutDislikedByDataInput: ReviewUpdateWithoutDislikedByDataInputInputObject
      UserUpdateOneRequiredWithoutReviewListInput: UserUpdateOneRequiredWithoutReviewListInputInputObject
      UserUpdateWithoutReviewListDataInput: UserUpdateWithoutReviewListDataInputInputObject
      ReviewUpdateManyWithoutLikedByInput: ReviewUpdateManyWithoutLikedByInputInputObject
      ReviewUpdateWithWhereUniqueWithoutLikedByInput: ReviewUpdateWithWhereUniqueWithoutLikedByInputInputObject
      ReviewUpdateWithoutLikedByDataInput: ReviewUpdateWithoutLikedByDataInputInputObject
      UserUpdateManyWithoutDislikedReviewsInput: UserUpdateManyWithoutDislikedReviewsInputInputObject
      UserUpdateWithWhereUniqueWithoutDislikedReviewsInput: UserUpdateWithWhereUniqueWithoutDislikedReviewsInputInputObject
      UserUpdateWithoutDislikedReviewsDataInput: UserUpdateWithoutDislikedReviewsDataInputInputObject
      ProjectUpdateManyWithoutUserInput: ProjectUpdateManyWithoutUserInputInputObject
      ProjectUpdateWithWhereUniqueWithoutUserInput: ProjectUpdateWithWhereUniqueWithoutUserInputInputObject
      ProjectUpdateWithoutUserDataInput: ProjectUpdateWithoutUserDataInputInputObject
      ProjectUpdateratingInput: ProjectUpdateratingInputInputObject
      ReviewUpdateManyWithoutProjectReviewedInput: ReviewUpdateManyWithoutProjectReviewedInputInputObject
      ReviewUpdateWithWhereUniqueWithoutProjectReviewedInput: ReviewUpdateWithWhereUniqueWithoutProjectReviewedInputInputObject
      ReviewUpdateWithoutProjectReviewedDataInput: ReviewUpdateWithoutProjectReviewedDataInputInputObject
      ReviewUpsertWithWhereUniqueWithoutProjectReviewedInput: ReviewUpsertWithWhereUniqueWithoutProjectReviewedInputInputObject
      ReviewScalarWhereInput: ReviewScalarWhereInputInputObject
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInputInputObject
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInputInputObject
      UserUpdateManyWithoutRatedProjectsInput: UserUpdateManyWithoutRatedProjectsInputInputObject
      UserUpdateWithWhereUniqueWithoutRatedProjectsInput: UserUpdateWithWhereUniqueWithoutRatedProjectsInputInputObject
      UserUpdateWithoutRatedProjectsDataInput: UserUpdateWithoutRatedProjectsDataInputInputObject
      UserUpsertWithWhereUniqueWithoutRatedProjectsInput: UserUpsertWithWhereUniqueWithoutRatedProjectsInputInputObject
      UserScalarWhereInput: UserScalarWhereInputInputObject
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInputInputObject
      UserUpdateManyDataInput: UserUpdateManyDataInputInputObject
      ProjectUpsertWithWhereUniqueWithoutUserInput: ProjectUpsertWithWhereUniqueWithoutUserInputInputObject
      ProjectScalarWhereInput: ProjectScalarWhereInputInputObject
      ProjectUpdateManyWithWhereNestedInput: ProjectUpdateManyWithWhereNestedInputInputObject
      ProjectUpdateManyDataInput: ProjectUpdateManyDataInputInputObject
      ProjectUpdateManyWithoutRatedByInput: ProjectUpdateManyWithoutRatedByInputInputObject
      ProjectUpdateWithWhereUniqueWithoutRatedByInput: ProjectUpdateWithWhereUniqueWithoutRatedByInputInputObject
      ProjectUpdateWithoutRatedByDataInput: ProjectUpdateWithoutRatedByDataInputInputObject
      UserUpdateOneRequiredWithoutProjectsInput: UserUpdateOneRequiredWithoutProjectsInputInputObject
      UserUpdateWithoutProjectsDataInput: UserUpdateWithoutProjectsDataInputInputObject
      UserUpsertWithoutProjectsInput: UserUpsertWithoutProjectsInputInputObject
      ProjectUpsertWithWhereUniqueWithoutRatedByInput: ProjectUpsertWithWhereUniqueWithoutRatedByInputInputObject
      UserUpsertWithWhereUniqueWithoutDislikedReviewsInput: UserUpsertWithWhereUniqueWithoutDislikedReviewsInputInputObject
      ProjectUpdateOneRequiredWithoutReviewsInput: ProjectUpdateOneRequiredWithoutReviewsInputInputObject
      ProjectUpdateWithoutReviewsDataInput: ProjectUpdateWithoutReviewsDataInputInputObject
      ProjectUpsertWithoutReviewsInput: ProjectUpsertWithoutReviewsInputInputObject
      ReviewUpsertWithWhereUniqueWithoutLikedByInput: ReviewUpsertWithWhereUniqueWithoutLikedByInputInputObject
      UserUpsertWithoutReviewListInput: UserUpsertWithoutReviewListInputInputObject
      ReviewUpsertWithWhereUniqueWithoutDislikedByInput: ReviewUpsertWithWhereUniqueWithoutDislikedByInputInputObject
      UserUpsertWithWhereUniqueWithoutLikedReviewsInput: UserUpsertWithWhereUniqueWithoutLikedReviewsInputInputObject
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      ProjectCreateInput: ProjectCreateInputInputObject
      ProjectUpdateInput: ProjectUpdateInputInputObject
      ProjectUpdateManyMutationInput: ProjectUpdateManyMutationInputInputObject
      ReviewCreateInput: ReviewCreateInputInputObject
      ReviewUpdateInput: ReviewUpdateInputInputObject
      ReviewUpdateManyMutationInput: ReviewUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      ProjectSubscriptionWhereInput: ProjectSubscriptionWhereInputInputObject
      ReviewSubscriptionWhereInput: ReviewSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    ReviewOrderByInput: ReviewOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    ProjectOrderByInput: ProjectOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'project', args?: QueryProjectArgs[] | false, alias?: string  } 
  | { name: 'projects', args?: QueryProjectsArgs[] | false, alias?: string  } 
  | { name: 'projectsConnection', args?: QueryProjectsConnectionArgs[] | false, alias?: string  } 
  | { name: 'review', args?: QueryReviewArgs[] | false, alias?: string  } 
  | { name: 'reviews', args?: QueryReviewsArgs[] | false, alias?: string  } 
  | { name: 'reviewsConnection', args?: QueryReviewsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'project'
  | 'projects'
  | 'projectsConnection'
  | 'review'
  | 'reviews'
  | 'reviewsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProjectArgs =
  | 'where'
type QueryProjectsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProjectsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryReviewArgs =
  | 'where'
type QueryReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryReviewsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  project: {
    type: 'Project'
    args: Record<QueryProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  projects: {
    type: 'Project'
    args: Record<QueryProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project[]> | prisma.Project[]
  }
  projectsConnection: {
    type: 'ProjectConnection'
    args: Record<QueryProjectsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectConnection> | prisma.ProjectConnection
  }
  review: {
    type: 'Review'
    args: Record<QueryReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  reviews: {
    type: 'Review'
    args: Record<QueryReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  reviewsConnection: {
    type: 'ReviewConnection'
    args: Record<QueryReviewsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewConnection> | prisma.ReviewConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'thirdPartyUID', args?: [] | false, alias?: string  } 
  | { name: 'firebaseUID', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'userProfileImage', args?: [] | false, alias?: string  } 
  | { name: 'bio', args?: [] | false, alias?: string  } 
  | { name: 'privilege', args?: [] | false, alias?: string  } 
  | { name: 'stripeId', args?: [] | false, alias?: string  } 
  | { name: 'accountType', args?: [] | false, alias?: string  } 
  | { name: 'ReviewList', args?: UserReviewListArgs[] | false, alias?: string  } 
  | { name: 'LikedReviews', args?: UserLikedReviewsArgs[] | false, alias?: string  } 
  | { name: 'DislikedReviews', args?: UserDislikedReviewsArgs[] | false, alias?: string  } 
  | { name: 'Projects', args?: UserProjectsArgs[] | false, alias?: string  } 
  | { name: 'RatedProjects', args?: UserRatedProjectsArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'thirdPartyUID'
  | 'firebaseUID'
  | 'username'
  | 'email'
  | 'userProfileImage'
  | 'bio'
  | 'privilege'
  | 'stripeId'
  | 'accountType'
  | 'ReviewList'
  | 'LikedReviews'
  | 'DislikedReviews'
  | 'Projects'
  | 'RatedProjects'


type UserReviewListArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserLikedReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserDislikedReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserProjectsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserRatedProjectsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  thirdPartyUID: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  firebaseUID: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  userProfileImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bio: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  privilege: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  stripeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  accountType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ReviewList: {
    type: 'Review'
    args: Record<UserReviewListArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  LikedReviews: {
    type: 'Review'
    args: Record<UserLikedReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  DislikedReviews: {
    type: 'Review'
    args: Record<UserDislikedReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  Projects: {
    type: 'Project'
    args: Record<UserProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project[]> | prisma.Project[]
  }
  RatedProjects: {
    type: 'Project'
    args: Record<UserRatedProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project[]> | prisma.Project[]
  }
}
  

// Types for Review

type ReviewObject =
  | ReviewFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'rKey', args?: [] | false, alias?: string  } 
  | { name: 'text', args?: [] | false, alias?: string  } 
  | { name: 'timestamp', args?: [] | false, alias?: string  } 
  | { name: 'projRating', args?: [] | false, alias?: string  } 
  | { name: 'thumbsUp', args?: [] | false, alias?: string  } 
  | { name: 'LikedBy', args?: ReviewLikedByArgs[] | false, alias?: string  } 
  | { name: 'thumbsDown', args?: [] | false, alias?: string  } 
  | { name: 'DislikedBy', args?: ReviewDislikedByArgs[] | false, alias?: string  } 
  | { name: 'Author', args?: [] | false, alias?: string  } 
  | { name: 'ProjectReviewed', args?: [] | false, alias?: string  } 

type ReviewFields =
  | 'id'
  | 'name'
  | 'rKey'
  | 'text'
  | 'timestamp'
  | 'projRating'
  | 'thumbsUp'
  | 'LikedBy'
  | 'thumbsDown'
  | 'DislikedBy'
  | 'Author'
  | 'ProjectReviewed'


type ReviewLikedByArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ReviewDislikedByArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ReviewFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  timestamp: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  projRating: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  thumbsUp: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  LikedBy: {
    type: 'User'
    args: Record<ReviewLikedByArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Review">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  thumbsDown: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  DislikedBy: {
    type: 'User'
    args: Record<ReviewDislikedByArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Review">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  Author: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Review">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  ProjectReviewed: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Review">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
}
  

// Types for Project

type ProjectObject =
  | ProjectFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 
  | { name: 'timestamp', args?: [] | false, alias?: string  } 
  | { name: 'titleImg', args?: [] | false, alias?: string  } 
  | { name: 'titleBlurb', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'steps', args?: [] | false, alias?: string  } 
  | { name: 'User', args?: [] | false, alias?: string  } 
  | { name: 'Reviews', args?: ProjectReviewsArgs[] | false, alias?: string  } 
  | { name: 'RatedBy', args?: ProjectRatedByArgs[] | false, alias?: string  } 

type ProjectFields =
  | 'id'
  | 'name'
  | 'key'
  | 'category'
  | 'timestamp'
  | 'titleImg'
  | 'titleBlurb'
  | 'rating'
  | 'steps'
  | 'User'
  | 'Reviews'
  | 'RatedBy'


type ProjectReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ProjectRatedByArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ProjectFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  category: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  timestamp: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  titleImg: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  titleBlurb: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rating: {
    type: 'Int'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  steps: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  User: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  Reviews: {
    type: 'Review'
    args: Record<ProjectReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  RatedBy: {
    type: 'User'
    args: Record<ProjectRatedByArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProjectConnection

type ProjectConnectionObject =
  | ProjectConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProjectConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProjectConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProjectEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectEdge[]> | prisma.ProjectEdge[]
  }
  aggregate: {
    type: 'AggregateProject'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProject> | prisma.AggregateProject
  }
}
  

// Types for ProjectEdge

type ProjectEdgeObject =
  | ProjectEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProjectEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProjectEdgeFieldDetails {
  node: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProject

type AggregateProjectObject =
  | AggregateProjectFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProjectFields =
  | 'count'



  

export interface AggregateProjectFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ReviewConnection

type ReviewConnectionObject =
  | ReviewConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ReviewConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ReviewConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ReviewEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewEdge[]> | prisma.ReviewEdge[]
  }
  aggregate: {
    type: 'AggregateReview'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateReview> | prisma.AggregateReview
  }
}
  

// Types for ReviewEdge

type ReviewEdgeObject =
  | ReviewEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ReviewEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ReviewEdgeFieldDetails {
  node: {
    type: 'Review'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateReview

type AggregateReviewObject =
  | AggregateReviewFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateReviewFields =
  | 'count'



  

export interface AggregateReviewFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createProject', args?: MutationCreateProjectArgs[] | false, alias?: string  } 
  | { name: 'updateProject', args?: MutationUpdateProjectArgs[] | false, alias?: string  } 
  | { name: 'updateManyProjects', args?: MutationUpdateManyProjectsArgs[] | false, alias?: string  } 
  | { name: 'upsertProject', args?: MutationUpsertProjectArgs[] | false, alias?: string  } 
  | { name: 'deleteProject', args?: MutationDeleteProjectArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProjects', args?: MutationDeleteManyProjectsArgs[] | false, alias?: string  } 
  | { name: 'createReview', args?: MutationCreateReviewArgs[] | false, alias?: string  } 
  | { name: 'updateReview', args?: MutationUpdateReviewArgs[] | false, alias?: string  } 
  | { name: 'updateManyReviews', args?: MutationUpdateManyReviewsArgs[] | false, alias?: string  } 
  | { name: 'upsertReview', args?: MutationUpsertReviewArgs[] | false, alias?: string  } 
  | { name: 'deleteReview', args?: MutationDeleteReviewArgs[] | false, alias?: string  } 
  | { name: 'deleteManyReviews', args?: MutationDeleteManyReviewsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createProject'
  | 'updateProject'
  | 'updateManyProjects'
  | 'upsertProject'
  | 'deleteProject'
  | 'deleteManyProjects'
  | 'createReview'
  | 'updateReview'
  | 'updateManyReviews'
  | 'upsertReview'
  | 'deleteReview'
  | 'deleteManyReviews'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateProjectArgs =
  | 'data'
type MutationUpdateProjectArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProjectsArgs =
  | 'data'
  | 'where'
type MutationUpsertProjectArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProjectArgs =
  | 'where'
type MutationDeleteManyProjectsArgs =
  | 'where'
type MutationCreateReviewArgs =
  | 'data'
type MutationUpdateReviewArgs =
  | 'data'
  | 'where'
type MutationUpdateManyReviewsArgs =
  | 'data'
  | 'where'
type MutationUpsertReviewArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteReviewArgs =
  | 'where'
type MutationDeleteManyReviewsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createProject: {
    type: 'Project'
    args: Record<MutationCreateProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  updateProject: {
    type: 'Project'
    args: Record<MutationUpdateProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectUpdateInput, where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  updateManyProjects: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectUpdateManyMutationInput, where?: ProjectWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProject: {
    type: 'Project'
    args: Record<MutationUpsertProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectWhereUniqueInput, create: ProjectCreateInput, update: ProjectUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  deleteProject: {
    type: 'Project'
    args: Record<MutationDeleteProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  deleteManyProjects: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProjectWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createReview: {
    type: 'Review'
    args: Record<MutationCreateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  updateReview: {
    type: 'Review'
    args: Record<MutationUpdateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewUpdateInput, where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  updateManyReviews: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewUpdateManyMutationInput, where?: ReviewWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertReview: {
    type: 'Review'
    args: Record<MutationUpsertReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ReviewWhereUniqueInput, create: ReviewCreateInput, update: ReviewUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  deleteReview: {
    type: 'Review'
    args: Record<MutationDeleteReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  deleteManyReviews: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ReviewWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'project', args?: SubscriptionProjectArgs[] | false, alias?: string  } 
  | { name: 'review', args?: SubscriptionReviewArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'project'
  | 'review'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionProjectArgs =
  | 'where'
type SubscriptionReviewArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  project: {
    type: 'ProjectSubscriptionPayload'
    args: Record<SubscriptionProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProjectSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectSubscriptionPayload | null> | prisma.ProjectSubscriptionPayload | null
  }
  review: {
    type: 'ReviewSubscriptionPayload'
    args: Record<SubscriptionReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ReviewSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewSubscriptionPayload | null> | prisma.ReviewSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'thirdPartyUID', args?: [] | false, alias?: string  } 
  | { name: 'firebaseUID', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'userProfileImage', args?: [] | false, alias?: string  } 
  | { name: 'bio', args?: [] | false, alias?: string  } 
  | { name: 'privilege', args?: [] | false, alias?: string  } 
  | { name: 'stripeId', args?: [] | false, alias?: string  } 
  | { name: 'accountType', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'thirdPartyUID'
  | 'firebaseUID'
  | 'username'
  | 'email'
  | 'userProfileImage'
  | 'bio'
  | 'privilege'
  | 'stripeId'
  | 'accountType'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  thirdPartyUID: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  firebaseUID: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  userProfileImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bio: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  privilege: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  stripeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  accountType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProjectSubscriptionPayload

type ProjectSubscriptionPayloadObject =
  | ProjectSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProjectSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProjectSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProjectPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectPreviousValues | null> | prisma.ProjectPreviousValues | null
  }
}
  

// Types for ProjectPreviousValues

type ProjectPreviousValuesObject =
  | ProjectPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 
  | { name: 'timestamp', args?: [] | false, alias?: string  } 
  | { name: 'titleImg', args?: [] | false, alias?: string  } 
  | { name: 'titleBlurb', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'steps', args?: [] | false, alias?: string  } 

type ProjectPreviousValuesFields =
  | 'id'
  | 'name'
  | 'key'
  | 'category'
  | 'timestamp'
  | 'titleImg'
  | 'titleBlurb'
  | 'rating'
  | 'steps'



  

export interface ProjectPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  category: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  timestamp: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  titleImg: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  titleBlurb: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rating: {
    type: 'Int'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  steps: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ReviewSubscriptionPayload

type ReviewSubscriptionPayloadObject =
  | ReviewSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ReviewSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ReviewSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Review'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ReviewPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewPreviousValues | null> | prisma.ReviewPreviousValues | null
  }
}
  

// Types for ReviewPreviousValues

type ReviewPreviousValuesObject =
  | ReviewPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'rKey', args?: [] | false, alias?: string  } 
  | { name: 'text', args?: [] | false, alias?: string  } 
  | { name: 'timestamp', args?: [] | false, alias?: string  } 
  | { name: 'projRating', args?: [] | false, alias?: string  } 
  | { name: 'thumbsUp', args?: [] | false, alias?: string  } 
  | { name: 'thumbsDown', args?: [] | false, alias?: string  } 

type ReviewPreviousValuesFields =
  | 'id'
  | 'name'
  | 'rKey'
  | 'text'
  | 'timestamp'
  | 'projRating'
  | 'thumbsUp'
  | 'thumbsDown'



  

export interface ReviewPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  timestamp: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  projRating: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  thumbsUp: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  thumbsDown: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface ReviewWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  rKey?: string | null
  rKey_not?: string | null
  rKey_in?: string[]
  rKey_not_in?: string[]
  rKey_lt?: string | null
  rKey_lte?: string | null
  rKey_gt?: string | null
  rKey_gte?: string | null
  rKey_contains?: string | null
  rKey_not_contains?: string | null
  rKey_starts_with?: string | null
  rKey_not_starts_with?: string | null
  rKey_ends_with?: string | null
  rKey_not_ends_with?: string | null
  text?: string | null
  text_not?: string | null
  text_in?: string[]
  text_not_in?: string[]
  text_lt?: string | null
  text_lte?: string | null
  text_gt?: string | null
  text_gte?: string | null
  text_contains?: string | null
  text_not_contains?: string | null
  text_starts_with?: string | null
  text_not_starts_with?: string | null
  text_ends_with?: string | null
  text_not_ends_with?: string | null
  timestamp?: string | null
  timestamp_not?: string | null
  timestamp_in?: string[]
  timestamp_not_in?: string[]
  timestamp_lt?: string | null
  timestamp_lte?: string | null
  timestamp_gt?: string | null
  timestamp_gte?: string | null
  projRating?: number | null
  projRating_not?: number | null
  projRating_in?: number[]
  projRating_not_in?: number[]
  projRating_lt?: number | null
  projRating_lte?: number | null
  projRating_gt?: number | null
  projRating_gte?: number | null
  thumbsUp?: number | null
  thumbsUp_not?: number | null
  thumbsUp_in?: number[]
  thumbsUp_not_in?: number[]
  thumbsUp_lt?: number | null
  thumbsUp_lte?: number | null
  thumbsUp_gt?: number | null
  thumbsUp_gte?: number | null
  LikedBy_every?: UserWhereInput | null
  LikedBy_some?: UserWhereInput | null
  LikedBy_none?: UserWhereInput | null
  thumbsDown?: number | null
  thumbsDown_not?: number | null
  thumbsDown_in?: number[]
  thumbsDown_not_in?: number[]
  thumbsDown_lt?: number | null
  thumbsDown_lte?: number | null
  thumbsDown_gt?: number | null
  thumbsDown_gte?: number | null
  DislikedBy_every?: UserWhereInput | null
  DislikedBy_some?: UserWhereInput | null
  DislikedBy_none?: UserWhereInput | null
  Author?: UserWhereInput | null
  ProjectReviewed?: ProjectWhereInput | null
  AND?: ReviewWhereInput[]
  OR?: ReviewWhereInput[]
  NOT?: ReviewWhereInput[]
}
export type ReviewWhereInputInputObject =
  | Extract<keyof ReviewWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'rKey_not', alias?: string  } 
  | { name: 'rKey_in', alias?: string  } 
  | { name: 'rKey_not_in', alias?: string  } 
  | { name: 'rKey_lt', alias?: string  } 
  | { name: 'rKey_lte', alias?: string  } 
  | { name: 'rKey_gt', alias?: string  } 
  | { name: 'rKey_gte', alias?: string  } 
  | { name: 'rKey_contains', alias?: string  } 
  | { name: 'rKey_not_contains', alias?: string  } 
  | { name: 'rKey_starts_with', alias?: string  } 
  | { name: 'rKey_not_starts_with', alias?: string  } 
  | { name: 'rKey_ends_with', alias?: string  } 
  | { name: 'rKey_not_ends_with', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'text_not', alias?: string  } 
  | { name: 'text_in', alias?: string  } 
  | { name: 'text_not_in', alias?: string  } 
  | { name: 'text_lt', alias?: string  } 
  | { name: 'text_lte', alias?: string  } 
  | { name: 'text_gt', alias?: string  } 
  | { name: 'text_gte', alias?: string  } 
  | { name: 'text_contains', alias?: string  } 
  | { name: 'text_not_contains', alias?: string  } 
  | { name: 'text_starts_with', alias?: string  } 
  | { name: 'text_not_starts_with', alias?: string  } 
  | { name: 'text_ends_with', alias?: string  } 
  | { name: 'text_not_ends_with', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'timestamp_not', alias?: string  } 
  | { name: 'timestamp_in', alias?: string  } 
  | { name: 'timestamp_not_in', alias?: string  } 
  | { name: 'timestamp_lt', alias?: string  } 
  | { name: 'timestamp_lte', alias?: string  } 
  | { name: 'timestamp_gt', alias?: string  } 
  | { name: 'timestamp_gte', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'projRating_not', alias?: string  } 
  | { name: 'projRating_in', alias?: string  } 
  | { name: 'projRating_not_in', alias?: string  } 
  | { name: 'projRating_lt', alias?: string  } 
  | { name: 'projRating_lte', alias?: string  } 
  | { name: 'projRating_gt', alias?: string  } 
  | { name: 'projRating_gte', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'thumbsUp_not', alias?: string  } 
  | { name: 'thumbsUp_in', alias?: string  } 
  | { name: 'thumbsUp_not_in', alias?: string  } 
  | { name: 'thumbsUp_lt', alias?: string  } 
  | { name: 'thumbsUp_lte', alias?: string  } 
  | { name: 'thumbsUp_gt', alias?: string  } 
  | { name: 'thumbsUp_gte', alias?: string  } 
  | { name: 'LikedBy_every', alias?: string  } 
  | { name: 'LikedBy_some', alias?: string  } 
  | { name: 'LikedBy_none', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'thumbsDown_not', alias?: string  } 
  | { name: 'thumbsDown_in', alias?: string  } 
  | { name: 'thumbsDown_not_in', alias?: string  } 
  | { name: 'thumbsDown_lt', alias?: string  } 
  | { name: 'thumbsDown_lte', alias?: string  } 
  | { name: 'thumbsDown_gt', alias?: string  } 
  | { name: 'thumbsDown_gte', alias?: string  } 
  | { name: 'DislikedBy_every', alias?: string  } 
  | { name: 'DislikedBy_some', alias?: string  } 
  | { name: 'DislikedBy_none', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  thirdPartyUID?: string | null
  thirdPartyUID_not?: string | null
  thirdPartyUID_in?: string[]
  thirdPartyUID_not_in?: string[]
  thirdPartyUID_lt?: string | null
  thirdPartyUID_lte?: string | null
  thirdPartyUID_gt?: string | null
  thirdPartyUID_gte?: string | null
  thirdPartyUID_contains?: string | null
  thirdPartyUID_not_contains?: string | null
  thirdPartyUID_starts_with?: string | null
  thirdPartyUID_not_starts_with?: string | null
  thirdPartyUID_ends_with?: string | null
  thirdPartyUID_not_ends_with?: string | null
  firebaseUID?: string | null
  firebaseUID_not?: string | null
  firebaseUID_in?: string[]
  firebaseUID_not_in?: string[]
  firebaseUID_lt?: string | null
  firebaseUID_lte?: string | null
  firebaseUID_gt?: string | null
  firebaseUID_gte?: string | null
  firebaseUID_contains?: string | null
  firebaseUID_not_contains?: string | null
  firebaseUID_starts_with?: string | null
  firebaseUID_not_starts_with?: string | null
  firebaseUID_ends_with?: string | null
  firebaseUID_not_ends_with?: string | null
  username?: string | null
  username_not?: string | null
  username_in?: string[]
  username_not_in?: string[]
  username_lt?: string | null
  username_lte?: string | null
  username_gt?: string | null
  username_gte?: string | null
  username_contains?: string | null
  username_not_contains?: string | null
  username_starts_with?: string | null
  username_not_starts_with?: string | null
  username_ends_with?: string | null
  username_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  userProfileImage?: string | null
  userProfileImage_not?: string | null
  userProfileImage_in?: string[]
  userProfileImage_not_in?: string[]
  userProfileImage_lt?: string | null
  userProfileImage_lte?: string | null
  userProfileImage_gt?: string | null
  userProfileImage_gte?: string | null
  userProfileImage_contains?: string | null
  userProfileImage_not_contains?: string | null
  userProfileImage_starts_with?: string | null
  userProfileImage_not_starts_with?: string | null
  userProfileImage_ends_with?: string | null
  userProfileImage_not_ends_with?: string | null
  bio?: string | null
  bio_not?: string | null
  bio_in?: string[]
  bio_not_in?: string[]
  bio_lt?: string | null
  bio_lte?: string | null
  bio_gt?: string | null
  bio_gte?: string | null
  bio_contains?: string | null
  bio_not_contains?: string | null
  bio_starts_with?: string | null
  bio_not_starts_with?: string | null
  bio_ends_with?: string | null
  bio_not_ends_with?: string | null
  privilege?: string | null
  privilege_not?: string | null
  privilege_in?: string[]
  privilege_not_in?: string[]
  privilege_lt?: string | null
  privilege_lte?: string | null
  privilege_gt?: string | null
  privilege_gte?: string | null
  privilege_contains?: string | null
  privilege_not_contains?: string | null
  privilege_starts_with?: string | null
  privilege_not_starts_with?: string | null
  privilege_ends_with?: string | null
  privilege_not_ends_with?: string | null
  stripeId?: string | null
  stripeId_not?: string | null
  stripeId_in?: string[]
  stripeId_not_in?: string[]
  stripeId_lt?: string | null
  stripeId_lte?: string | null
  stripeId_gt?: string | null
  stripeId_gte?: string | null
  stripeId_contains?: string | null
  stripeId_not_contains?: string | null
  stripeId_starts_with?: string | null
  stripeId_not_starts_with?: string | null
  stripeId_ends_with?: string | null
  stripeId_not_ends_with?: string | null
  accountType?: string | null
  accountType_not?: string | null
  accountType_in?: string[]
  accountType_not_in?: string[]
  accountType_lt?: string | null
  accountType_lte?: string | null
  accountType_gt?: string | null
  accountType_gte?: string | null
  accountType_contains?: string | null
  accountType_not_contains?: string | null
  accountType_starts_with?: string | null
  accountType_not_starts_with?: string | null
  accountType_ends_with?: string | null
  accountType_not_ends_with?: string | null
  ReviewList_every?: ReviewWhereInput | null
  ReviewList_some?: ReviewWhereInput | null
  ReviewList_none?: ReviewWhereInput | null
  LikedReviews_every?: ReviewWhereInput | null
  LikedReviews_some?: ReviewWhereInput | null
  LikedReviews_none?: ReviewWhereInput | null
  DislikedReviews_every?: ReviewWhereInput | null
  DislikedReviews_some?: ReviewWhereInput | null
  DislikedReviews_none?: ReviewWhereInput | null
  Projects_every?: ProjectWhereInput | null
  Projects_some?: ProjectWhereInput | null
  Projects_none?: ProjectWhereInput | null
  RatedProjects_every?: ProjectWhereInput | null
  RatedProjects_some?: ProjectWhereInput | null
  RatedProjects_none?: ProjectWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'thirdPartyUID_not', alias?: string  } 
  | { name: 'thirdPartyUID_in', alias?: string  } 
  | { name: 'thirdPartyUID_not_in', alias?: string  } 
  | { name: 'thirdPartyUID_lt', alias?: string  } 
  | { name: 'thirdPartyUID_lte', alias?: string  } 
  | { name: 'thirdPartyUID_gt', alias?: string  } 
  | { name: 'thirdPartyUID_gte', alias?: string  } 
  | { name: 'thirdPartyUID_contains', alias?: string  } 
  | { name: 'thirdPartyUID_not_contains', alias?: string  } 
  | { name: 'thirdPartyUID_starts_with', alias?: string  } 
  | { name: 'thirdPartyUID_not_starts_with', alias?: string  } 
  | { name: 'thirdPartyUID_ends_with', alias?: string  } 
  | { name: 'thirdPartyUID_not_ends_with', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'firebaseUID_not', alias?: string  } 
  | { name: 'firebaseUID_in', alias?: string  } 
  | { name: 'firebaseUID_not_in', alias?: string  } 
  | { name: 'firebaseUID_lt', alias?: string  } 
  | { name: 'firebaseUID_lte', alias?: string  } 
  | { name: 'firebaseUID_gt', alias?: string  } 
  | { name: 'firebaseUID_gte', alias?: string  } 
  | { name: 'firebaseUID_contains', alias?: string  } 
  | { name: 'firebaseUID_not_contains', alias?: string  } 
  | { name: 'firebaseUID_starts_with', alias?: string  } 
  | { name: 'firebaseUID_not_starts_with', alias?: string  } 
  | { name: 'firebaseUID_ends_with', alias?: string  } 
  | { name: 'firebaseUID_not_ends_with', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'username_not', alias?: string  } 
  | { name: 'username_in', alias?: string  } 
  | { name: 'username_not_in', alias?: string  } 
  | { name: 'username_lt', alias?: string  } 
  | { name: 'username_lte', alias?: string  } 
  | { name: 'username_gt', alias?: string  } 
  | { name: 'username_gte', alias?: string  } 
  | { name: 'username_contains', alias?: string  } 
  | { name: 'username_not_contains', alias?: string  } 
  | { name: 'username_starts_with', alias?: string  } 
  | { name: 'username_not_starts_with', alias?: string  } 
  | { name: 'username_ends_with', alias?: string  } 
  | { name: 'username_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'userProfileImage_not', alias?: string  } 
  | { name: 'userProfileImage_in', alias?: string  } 
  | { name: 'userProfileImage_not_in', alias?: string  } 
  | { name: 'userProfileImage_lt', alias?: string  } 
  | { name: 'userProfileImage_lte', alias?: string  } 
  | { name: 'userProfileImage_gt', alias?: string  } 
  | { name: 'userProfileImage_gte', alias?: string  } 
  | { name: 'userProfileImage_contains', alias?: string  } 
  | { name: 'userProfileImage_not_contains', alias?: string  } 
  | { name: 'userProfileImage_starts_with', alias?: string  } 
  | { name: 'userProfileImage_not_starts_with', alias?: string  } 
  | { name: 'userProfileImage_ends_with', alias?: string  } 
  | { name: 'userProfileImage_not_ends_with', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'bio_not', alias?: string  } 
  | { name: 'bio_in', alias?: string  } 
  | { name: 'bio_not_in', alias?: string  } 
  | { name: 'bio_lt', alias?: string  } 
  | { name: 'bio_lte', alias?: string  } 
  | { name: 'bio_gt', alias?: string  } 
  | { name: 'bio_gte', alias?: string  } 
  | { name: 'bio_contains', alias?: string  } 
  | { name: 'bio_not_contains', alias?: string  } 
  | { name: 'bio_starts_with', alias?: string  } 
  | { name: 'bio_not_starts_with', alias?: string  } 
  | { name: 'bio_ends_with', alias?: string  } 
  | { name: 'bio_not_ends_with', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'privilege_not', alias?: string  } 
  | { name: 'privilege_in', alias?: string  } 
  | { name: 'privilege_not_in', alias?: string  } 
  | { name: 'privilege_lt', alias?: string  } 
  | { name: 'privilege_lte', alias?: string  } 
  | { name: 'privilege_gt', alias?: string  } 
  | { name: 'privilege_gte', alias?: string  } 
  | { name: 'privilege_contains', alias?: string  } 
  | { name: 'privilege_not_contains', alias?: string  } 
  | { name: 'privilege_starts_with', alias?: string  } 
  | { name: 'privilege_not_starts_with', alias?: string  } 
  | { name: 'privilege_ends_with', alias?: string  } 
  | { name: 'privilege_not_ends_with', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'stripeId_not', alias?: string  } 
  | { name: 'stripeId_in', alias?: string  } 
  | { name: 'stripeId_not_in', alias?: string  } 
  | { name: 'stripeId_lt', alias?: string  } 
  | { name: 'stripeId_lte', alias?: string  } 
  | { name: 'stripeId_gt', alias?: string  } 
  | { name: 'stripeId_gte', alias?: string  } 
  | { name: 'stripeId_contains', alias?: string  } 
  | { name: 'stripeId_not_contains', alias?: string  } 
  | { name: 'stripeId_starts_with', alias?: string  } 
  | { name: 'stripeId_not_starts_with', alias?: string  } 
  | { name: 'stripeId_ends_with', alias?: string  } 
  | { name: 'stripeId_not_ends_with', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'accountType_not', alias?: string  } 
  | { name: 'accountType_in', alias?: string  } 
  | { name: 'accountType_not_in', alias?: string  } 
  | { name: 'accountType_lt', alias?: string  } 
  | { name: 'accountType_lte', alias?: string  } 
  | { name: 'accountType_gt', alias?: string  } 
  | { name: 'accountType_gte', alias?: string  } 
  | { name: 'accountType_contains', alias?: string  } 
  | { name: 'accountType_not_contains', alias?: string  } 
  | { name: 'accountType_starts_with', alias?: string  } 
  | { name: 'accountType_not_starts_with', alias?: string  } 
  | { name: 'accountType_ends_with', alias?: string  } 
  | { name: 'accountType_not_ends_with', alias?: string  } 
  | { name: 'ReviewList_every', alias?: string  } 
  | { name: 'ReviewList_some', alias?: string  } 
  | { name: 'ReviewList_none', alias?: string  } 
  | { name: 'LikedReviews_every', alias?: string  } 
  | { name: 'LikedReviews_some', alias?: string  } 
  | { name: 'LikedReviews_none', alias?: string  } 
  | { name: 'DislikedReviews_every', alias?: string  } 
  | { name: 'DislikedReviews_some', alias?: string  } 
  | { name: 'DislikedReviews_none', alias?: string  } 
  | { name: 'Projects_every', alias?: string  } 
  | { name: 'Projects_some', alias?: string  } 
  | { name: 'Projects_none', alias?: string  } 
  | { name: 'RatedProjects_every', alias?: string  } 
  | { name: 'RatedProjects_some', alias?: string  } 
  | { name: 'RatedProjects_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  category?: string | null
  category_not?: string | null
  category_in?: string[]
  category_not_in?: string[]
  category_lt?: string | null
  category_lte?: string | null
  category_gt?: string | null
  category_gte?: string | null
  category_contains?: string | null
  category_not_contains?: string | null
  category_starts_with?: string | null
  category_not_starts_with?: string | null
  category_ends_with?: string | null
  category_not_ends_with?: string | null
  timestamp?: string | null
  timestamp_not?: string | null
  timestamp_in?: string[]
  timestamp_not_in?: string[]
  timestamp_lt?: string | null
  timestamp_lte?: string | null
  timestamp_gt?: string | null
  timestamp_gte?: string | null
  titleImg?: string | null
  titleImg_not?: string | null
  titleImg_in?: string[]
  titleImg_not_in?: string[]
  titleImg_lt?: string | null
  titleImg_lte?: string | null
  titleImg_gt?: string | null
  titleImg_gte?: string | null
  titleImg_contains?: string | null
  titleImg_not_contains?: string | null
  titleImg_starts_with?: string | null
  titleImg_not_starts_with?: string | null
  titleImg_ends_with?: string | null
  titleImg_not_ends_with?: string | null
  titleBlurb?: string | null
  titleBlurb_not?: string | null
  titleBlurb_in?: string[]
  titleBlurb_not_in?: string[]
  titleBlurb_lt?: string | null
  titleBlurb_lte?: string | null
  titleBlurb_gt?: string | null
  titleBlurb_gte?: string | null
  titleBlurb_contains?: string | null
  titleBlurb_not_contains?: string | null
  titleBlurb_starts_with?: string | null
  titleBlurb_not_starts_with?: string | null
  titleBlurb_ends_with?: string | null
  titleBlurb_not_ends_with?: string | null
  steps?: string | null
  steps_not?: string | null
  steps_in?: string[]
  steps_not_in?: string[]
  steps_lt?: string | null
  steps_lte?: string | null
  steps_gt?: string | null
  steps_gte?: string | null
  steps_contains?: string | null
  steps_not_contains?: string | null
  steps_starts_with?: string | null
  steps_not_starts_with?: string | null
  steps_ends_with?: string | null
  steps_not_ends_with?: string | null
  User?: UserWhereInput | null
  Reviews_every?: ReviewWhereInput | null
  Reviews_some?: ReviewWhereInput | null
  Reviews_none?: ReviewWhereInput | null
  RatedBy_every?: UserWhereInput | null
  RatedBy_some?: UserWhereInput | null
  RatedBy_none?: UserWhereInput | null
  AND?: ProjectWhereInput[]
  OR?: ProjectWhereInput[]
  NOT?: ProjectWhereInput[]
}
export type ProjectWhereInputInputObject =
  | Extract<keyof ProjectWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'category_not', alias?: string  } 
  | { name: 'category_in', alias?: string  } 
  | { name: 'category_not_in', alias?: string  } 
  | { name: 'category_lt', alias?: string  } 
  | { name: 'category_lte', alias?: string  } 
  | { name: 'category_gt', alias?: string  } 
  | { name: 'category_gte', alias?: string  } 
  | { name: 'category_contains', alias?: string  } 
  | { name: 'category_not_contains', alias?: string  } 
  | { name: 'category_starts_with', alias?: string  } 
  | { name: 'category_not_starts_with', alias?: string  } 
  | { name: 'category_ends_with', alias?: string  } 
  | { name: 'category_not_ends_with', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'timestamp_not', alias?: string  } 
  | { name: 'timestamp_in', alias?: string  } 
  | { name: 'timestamp_not_in', alias?: string  } 
  | { name: 'timestamp_lt', alias?: string  } 
  | { name: 'timestamp_lte', alias?: string  } 
  | { name: 'timestamp_gt', alias?: string  } 
  | { name: 'timestamp_gte', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleImg_not', alias?: string  } 
  | { name: 'titleImg_in', alias?: string  } 
  | { name: 'titleImg_not_in', alias?: string  } 
  | { name: 'titleImg_lt', alias?: string  } 
  | { name: 'titleImg_lte', alias?: string  } 
  | { name: 'titleImg_gt', alias?: string  } 
  | { name: 'titleImg_gte', alias?: string  } 
  | { name: 'titleImg_contains', alias?: string  } 
  | { name: 'titleImg_not_contains', alias?: string  } 
  | { name: 'titleImg_starts_with', alias?: string  } 
  | { name: 'titleImg_not_starts_with', alias?: string  } 
  | { name: 'titleImg_ends_with', alias?: string  } 
  | { name: 'titleImg_not_ends_with', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'titleBlurb_not', alias?: string  } 
  | { name: 'titleBlurb_in', alias?: string  } 
  | { name: 'titleBlurb_not_in', alias?: string  } 
  | { name: 'titleBlurb_lt', alias?: string  } 
  | { name: 'titleBlurb_lte', alias?: string  } 
  | { name: 'titleBlurb_gt', alias?: string  } 
  | { name: 'titleBlurb_gte', alias?: string  } 
  | { name: 'titleBlurb_contains', alias?: string  } 
  | { name: 'titleBlurb_not_contains', alias?: string  } 
  | { name: 'titleBlurb_starts_with', alias?: string  } 
  | { name: 'titleBlurb_not_starts_with', alias?: string  } 
  | { name: 'titleBlurb_ends_with', alias?: string  } 
  | { name: 'titleBlurb_not_ends_with', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'steps_not', alias?: string  } 
  | { name: 'steps_in', alias?: string  } 
  | { name: 'steps_not_in', alias?: string  } 
  | { name: 'steps_lt', alias?: string  } 
  | { name: 'steps_lte', alias?: string  } 
  | { name: 'steps_gt', alias?: string  } 
  | { name: 'steps_gte', alias?: string  } 
  | { name: 'steps_contains', alias?: string  } 
  | { name: 'steps_not_contains', alias?: string  } 
  | { name: 'steps_starts_with', alias?: string  } 
  | { name: 'steps_not_starts_with', alias?: string  } 
  | { name: 'steps_ends_with', alias?: string  } 
  | { name: 'steps_not_ends_with', alias?: string  } 
  | { name: 'User', alias?: string  } 
  | { name: 'Reviews_every', alias?: string  } 
  | { name: 'Reviews_some', alias?: string  } 
  | { name: 'Reviews_none', alias?: string  } 
  | { name: 'RatedBy_every', alias?: string  } 
  | { name: 'RatedBy_some', alias?: string  } 
  | { name: 'RatedBy_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectWhereUniqueInput {
  id?: string | null
  key?: string | null
}
export type ProjectWhereUniqueInputInputObject =
  | Extract<keyof ProjectWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  
export interface ReviewWhereUniqueInput {
  id?: string | null
  rKey?: string | null
}
export type ReviewWhereUniqueInputInputObject =
  | Extract<keyof ReviewWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  
export interface UserCreateInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string
  email?: string
  userProfileImage?: string
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewCreateManyWithoutAuthorInput | null
  LikedReviews?: ReviewCreateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewCreateManyWithoutDislikedByInput | null
  Projects?: ProjectCreateManyWithoutUserInput | null
  RatedProjects?: ProjectCreateManyWithoutRatedByInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ReviewCreateManyWithoutAuthorInput {
  create?: ReviewCreateWithoutAuthorInput[]
  connect?: ReviewWhereUniqueInput[]
}
export type ReviewCreateManyWithoutAuthorInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ReviewCreateWithoutAuthorInput {
  name?: string
  rKey?: string | null
  text?: string
  timestamp?: string
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserCreateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  DislikedBy?: UserCreateManyWithoutDislikedReviewsInput | null
  ProjectReviewed?: ProjectCreateOneWithoutReviewsInput
}
export type ReviewCreateWithoutAuthorInputInputObject =
  | Extract<keyof ReviewCreateWithoutAuthorInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface UserCreateManyWithoutLikedReviewsInput {
  create?: UserCreateWithoutLikedReviewsInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyWithoutLikedReviewsInputInputObject =
  | Extract<keyof UserCreateManyWithoutLikedReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutLikedReviewsInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string
  email?: string
  userProfileImage?: string
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewCreateManyWithoutAuthorInput | null
  DislikedReviews?: ReviewCreateManyWithoutDislikedByInput | null
  Projects?: ProjectCreateManyWithoutUserInput | null
  RatedProjects?: ProjectCreateManyWithoutRatedByInput | null
}
export type UserCreateWithoutLikedReviewsInputInputObject =
  | Extract<keyof UserCreateWithoutLikedReviewsInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ReviewCreateManyWithoutDislikedByInput {
  create?: ReviewCreateWithoutDislikedByInput[]
  connect?: ReviewWhereUniqueInput[]
}
export type ReviewCreateManyWithoutDislikedByInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutDislikedByInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ReviewCreateWithoutDislikedByInput {
  name?: string
  rKey?: string | null
  text?: string
  timestamp?: string
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserCreateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  Author?: UserCreateOneWithoutReviewListInput
  ProjectReviewed?: ProjectCreateOneWithoutReviewsInput
}
export type ReviewCreateWithoutDislikedByInputInputObject =
  | Extract<keyof ReviewCreateWithoutDislikedByInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface UserCreateOneWithoutReviewListInput {
  create?: UserCreateWithoutReviewListInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutReviewListInputInputObject =
  | Extract<keyof UserCreateOneWithoutReviewListInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutReviewListInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string
  email?: string
  userProfileImage?: string
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  LikedReviews?: ReviewCreateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewCreateManyWithoutDislikedByInput | null
  Projects?: ProjectCreateManyWithoutUserInput | null
  RatedProjects?: ProjectCreateManyWithoutRatedByInput | null
}
export type UserCreateWithoutReviewListInputInputObject =
  | Extract<keyof UserCreateWithoutReviewListInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ReviewCreateManyWithoutLikedByInput {
  create?: ReviewCreateWithoutLikedByInput[]
  connect?: ReviewWhereUniqueInput[]
}
export type ReviewCreateManyWithoutLikedByInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutLikedByInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ReviewCreateWithoutLikedByInput {
  name?: string
  rKey?: string | null
  text?: string
  timestamp?: string
  projRating?: number | null
  thumbsUp?: number | null
  thumbsDown?: number | null
  DislikedBy?: UserCreateManyWithoutDislikedReviewsInput | null
  Author?: UserCreateOneWithoutReviewListInput
  ProjectReviewed?: ProjectCreateOneWithoutReviewsInput
}
export type ReviewCreateWithoutLikedByInputInputObject =
  | Extract<keyof ReviewCreateWithoutLikedByInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface UserCreateManyWithoutDislikedReviewsInput {
  create?: UserCreateWithoutDislikedReviewsInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyWithoutDislikedReviewsInputInputObject =
  | Extract<keyof UserCreateManyWithoutDislikedReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutDislikedReviewsInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string
  email?: string
  userProfileImage?: string
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewCreateManyWithoutAuthorInput | null
  LikedReviews?: ReviewCreateManyWithoutLikedByInput | null
  Projects?: ProjectCreateManyWithoutUserInput | null
  RatedProjects?: ProjectCreateManyWithoutRatedByInput | null
}
export type UserCreateWithoutDislikedReviewsInputInputObject =
  | Extract<keyof UserCreateWithoutDislikedReviewsInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ProjectCreateManyWithoutUserInput {
  create?: ProjectCreateWithoutUserInput[]
  connect?: ProjectWhereUniqueInput[]
}
export type ProjectCreateManyWithoutUserInputInputObject =
  | Extract<keyof ProjectCreateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutUserInput {
  name?: string
  key?: string | null
  category?: string
  timestamp?: string
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectCreateratingInput | null
  steps?: string | null
  Reviews?: ReviewCreateManyWithoutProjectReviewedInput | null
  RatedBy?: UserCreateManyWithoutRatedProjectsInput | null
}
export type ProjectCreateWithoutUserInputInputObject =
  | Extract<keyof ProjectCreateWithoutUserInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'Reviews', alias?: string  } 
  | { name: 'RatedBy', alias?: string  } 
  
export interface ProjectCreateratingInput {
  set?: number[]
}
export type ProjectCreateratingInputInputObject =
  | Extract<keyof ProjectCreateratingInput, string>
  | { name: 'set', alias?: string  } 
  
export interface ReviewCreateManyWithoutProjectReviewedInput {
  create?: ReviewCreateWithoutProjectReviewedInput[]
  connect?: ReviewWhereUniqueInput[]
}
export type ReviewCreateManyWithoutProjectReviewedInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutProjectReviewedInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ReviewCreateWithoutProjectReviewedInput {
  name?: string
  rKey?: string | null
  text?: string
  timestamp?: string
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserCreateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  DislikedBy?: UserCreateManyWithoutDislikedReviewsInput | null
  Author?: UserCreateOneWithoutReviewListInput
}
export type ReviewCreateWithoutProjectReviewedInputInputObject =
  | Extract<keyof ReviewCreateWithoutProjectReviewedInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  
export interface UserCreateManyWithoutRatedProjectsInput {
  create?: UserCreateWithoutRatedProjectsInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyWithoutRatedProjectsInputInputObject =
  | Extract<keyof UserCreateManyWithoutRatedProjectsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutRatedProjectsInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string
  email?: string
  userProfileImage?: string
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewCreateManyWithoutAuthorInput | null
  LikedReviews?: ReviewCreateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewCreateManyWithoutDislikedByInput | null
  Projects?: ProjectCreateManyWithoutUserInput | null
}
export type UserCreateWithoutRatedProjectsInputInputObject =
  | Extract<keyof UserCreateWithoutRatedProjectsInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  
export interface ProjectCreateManyWithoutRatedByInput {
  create?: ProjectCreateWithoutRatedByInput[]
  connect?: ProjectWhereUniqueInput[]
}
export type ProjectCreateManyWithoutRatedByInputInputObject =
  | Extract<keyof ProjectCreateManyWithoutRatedByInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutRatedByInput {
  name?: string
  key?: string | null
  category?: string
  timestamp?: string
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectCreateratingInput | null
  steps?: string | null
  User?: UserCreateOneWithoutProjectsInput
  Reviews?: ReviewCreateManyWithoutProjectReviewedInput | null
}
export type ProjectCreateWithoutRatedByInputInputObject =
  | Extract<keyof ProjectCreateWithoutRatedByInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'User', alias?: string  } 
  | { name: 'Reviews', alias?: string  } 
  
export interface UserCreateOneWithoutProjectsInput {
  create?: UserCreateWithoutProjectsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutProjectsInputInputObject =
  | Extract<keyof UserCreateOneWithoutProjectsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutProjectsInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string
  email?: string
  userProfileImage?: string
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewCreateManyWithoutAuthorInput | null
  LikedReviews?: ReviewCreateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewCreateManyWithoutDislikedByInput | null
  RatedProjects?: ProjectCreateManyWithoutRatedByInput | null
}
export type UserCreateWithoutProjectsInputInputObject =
  | Extract<keyof UserCreateWithoutProjectsInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ProjectCreateOneWithoutReviewsInput {
  create?: ProjectCreateWithoutReviewsInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectCreateOneWithoutReviewsInputInputObject =
  | Extract<keyof ProjectCreateOneWithoutReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutReviewsInput {
  name?: string
  key?: string | null
  category?: string
  timestamp?: string
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectCreateratingInput | null
  steps?: string | null
  User?: UserCreateOneWithoutProjectsInput
  RatedBy?: UserCreateManyWithoutRatedProjectsInput | null
}
export type ProjectCreateWithoutReviewsInputInputObject =
  | Extract<keyof ProjectCreateWithoutReviewsInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'User', alias?: string  } 
  | { name: 'RatedBy', alias?: string  } 
  
export interface UserUpdateInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewUpdateManyWithoutAuthorInput | null
  LikedReviews?: ReviewUpdateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewUpdateManyWithoutDislikedByInput | null
  Projects?: ProjectUpdateManyWithoutUserInput | null
  RatedProjects?: ProjectUpdateManyWithoutRatedByInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ReviewUpdateManyWithoutAuthorInput {
  create?: ReviewCreateWithoutAuthorInput[]
  delete?: ReviewWhereUniqueInput[]
  connect?: ReviewWhereUniqueInput[]
  set?: ReviewWhereUniqueInput[]
  disconnect?: ReviewWhereUniqueInput[]
  update?: ReviewUpdateWithWhereUniqueWithoutAuthorInput[]
  upsert?: ReviewUpsertWithWhereUniqueWithoutAuthorInput[]
  deleteMany?: ReviewScalarWhereInput[]
  updateMany?: ReviewUpdateManyWithWhereNestedInput[]
}
export type ReviewUpdateManyWithoutAuthorInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  where?: ReviewWhereUniqueInput
  data?: ReviewUpdateWithoutAuthorDataInput
}
export type ReviewUpdateWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ReviewUpdateWithoutAuthorDataInput {
  name?: string | null
  rKey?: string | null
  text?: string | null
  timestamp?: string | null
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserUpdateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  DislikedBy?: UserUpdateManyWithoutDislikedReviewsInput | null
  ProjectReviewed?: ProjectUpdateOneRequiredWithoutReviewsInput | null
}
export type ReviewUpdateWithoutAuthorDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutAuthorDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface UserUpdateManyWithoutLikedReviewsInput {
  create?: UserCreateWithoutLikedReviewsInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  update?: UserUpdateWithWhereUniqueWithoutLikedReviewsInput[]
  upsert?: UserUpsertWithWhereUniqueWithoutLikedReviewsInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyWithoutLikedReviewsInputInputObject =
  | Extract<keyof UserUpdateManyWithoutLikedReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueWithoutLikedReviewsInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateWithoutLikedReviewsDataInput
}
export type UserUpdateWithWhereUniqueWithoutLikedReviewsInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueWithoutLikedReviewsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateWithoutLikedReviewsDataInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewUpdateManyWithoutAuthorInput | null
  DislikedReviews?: ReviewUpdateManyWithoutDislikedByInput | null
  Projects?: ProjectUpdateManyWithoutUserInput | null
  RatedProjects?: ProjectUpdateManyWithoutRatedByInput | null
}
export type UserUpdateWithoutLikedReviewsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutLikedReviewsDataInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ReviewUpdateManyWithoutDislikedByInput {
  create?: ReviewCreateWithoutDislikedByInput[]
  delete?: ReviewWhereUniqueInput[]
  connect?: ReviewWhereUniqueInput[]
  set?: ReviewWhereUniqueInput[]
  disconnect?: ReviewWhereUniqueInput[]
  update?: ReviewUpdateWithWhereUniqueWithoutDislikedByInput[]
  upsert?: ReviewUpsertWithWhereUniqueWithoutDislikedByInput[]
  deleteMany?: ReviewScalarWhereInput[]
  updateMany?: ReviewUpdateManyWithWhereNestedInput[]
}
export type ReviewUpdateManyWithoutDislikedByInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutDislikedByInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ReviewUpdateWithWhereUniqueWithoutDislikedByInput {
  where?: ReviewWhereUniqueInput
  data?: ReviewUpdateWithoutDislikedByDataInput
}
export type ReviewUpdateWithWhereUniqueWithoutDislikedByInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutDislikedByInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ReviewUpdateWithoutDislikedByDataInput {
  name?: string | null
  rKey?: string | null
  text?: string | null
  timestamp?: string | null
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserUpdateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  Author?: UserUpdateOneRequiredWithoutReviewListInput | null
  ProjectReviewed?: ProjectUpdateOneRequiredWithoutReviewsInput | null
}
export type ReviewUpdateWithoutDislikedByDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutDislikedByDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutReviewListInput {
  create?: UserCreateWithoutReviewListInput | null
  update?: UserUpdateWithoutReviewListDataInput | null
  upsert?: UserUpsertWithoutReviewListInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutReviewListInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutReviewListInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutReviewListDataInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  LikedReviews?: ReviewUpdateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewUpdateManyWithoutDislikedByInput | null
  Projects?: ProjectUpdateManyWithoutUserInput | null
  RatedProjects?: ProjectUpdateManyWithoutRatedByInput | null
}
export type UserUpdateWithoutReviewListDataInputInputObject =
  | Extract<keyof UserUpdateWithoutReviewListDataInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ReviewUpdateManyWithoutLikedByInput {
  create?: ReviewCreateWithoutLikedByInput[]
  delete?: ReviewWhereUniqueInput[]
  connect?: ReviewWhereUniqueInput[]
  set?: ReviewWhereUniqueInput[]
  disconnect?: ReviewWhereUniqueInput[]
  update?: ReviewUpdateWithWhereUniqueWithoutLikedByInput[]
  upsert?: ReviewUpsertWithWhereUniqueWithoutLikedByInput[]
  deleteMany?: ReviewScalarWhereInput[]
  updateMany?: ReviewUpdateManyWithWhereNestedInput[]
}
export type ReviewUpdateManyWithoutLikedByInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutLikedByInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ReviewUpdateWithWhereUniqueWithoutLikedByInput {
  where?: ReviewWhereUniqueInput
  data?: ReviewUpdateWithoutLikedByDataInput
}
export type ReviewUpdateWithWhereUniqueWithoutLikedByInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutLikedByInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ReviewUpdateWithoutLikedByDataInput {
  name?: string | null
  rKey?: string | null
  text?: string | null
  timestamp?: string | null
  projRating?: number | null
  thumbsUp?: number | null
  thumbsDown?: number | null
  DislikedBy?: UserUpdateManyWithoutDislikedReviewsInput | null
  Author?: UserUpdateOneRequiredWithoutReviewListInput | null
  ProjectReviewed?: ProjectUpdateOneRequiredWithoutReviewsInput | null
}
export type ReviewUpdateWithoutLikedByDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutLikedByDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface UserUpdateManyWithoutDislikedReviewsInput {
  create?: UserCreateWithoutDislikedReviewsInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  update?: UserUpdateWithWhereUniqueWithoutDislikedReviewsInput[]
  upsert?: UserUpsertWithWhereUniqueWithoutDislikedReviewsInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyWithoutDislikedReviewsInputInputObject =
  | Extract<keyof UserUpdateManyWithoutDislikedReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueWithoutDislikedReviewsInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateWithoutDislikedReviewsDataInput
}
export type UserUpdateWithWhereUniqueWithoutDislikedReviewsInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueWithoutDislikedReviewsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateWithoutDislikedReviewsDataInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewUpdateManyWithoutAuthorInput | null
  LikedReviews?: ReviewUpdateManyWithoutLikedByInput | null
  Projects?: ProjectUpdateManyWithoutUserInput | null
  RatedProjects?: ProjectUpdateManyWithoutRatedByInput | null
}
export type UserUpdateWithoutDislikedReviewsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutDislikedReviewsDataInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface ProjectUpdateManyWithoutUserInput {
  create?: ProjectCreateWithoutUserInput[]
  delete?: ProjectWhereUniqueInput[]
  connect?: ProjectWhereUniqueInput[]
  set?: ProjectWhereUniqueInput[]
  disconnect?: ProjectWhereUniqueInput[]
  update?: ProjectUpdateWithWhereUniqueWithoutUserInput[]
  upsert?: ProjectUpsertWithWhereUniqueWithoutUserInput[]
  deleteMany?: ProjectScalarWhereInput[]
  updateMany?: ProjectUpdateManyWithWhereNestedInput[]
}
export type ProjectUpdateManyWithoutUserInputInputObject =
  | Extract<keyof ProjectUpdateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProjectUpdateWithWhereUniqueWithoutUserInput {
  where?: ProjectWhereUniqueInput
  data?: ProjectUpdateWithoutUserDataInput
}
export type ProjectUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof ProjectUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProjectUpdateWithoutUserDataInput {
  name?: string | null
  key?: string | null
  category?: string | null
  timestamp?: string | null
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectUpdateratingInput | null
  steps?: string | null
  Reviews?: ReviewUpdateManyWithoutProjectReviewedInput | null
  RatedBy?: UserUpdateManyWithoutRatedProjectsInput | null
}
export type ProjectUpdateWithoutUserDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutUserDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'Reviews', alias?: string  } 
  | { name: 'RatedBy', alias?: string  } 
  
export interface ProjectUpdateratingInput {
  set?: number[]
}
export type ProjectUpdateratingInputInputObject =
  | Extract<keyof ProjectUpdateratingInput, string>
  | { name: 'set', alias?: string  } 
  
export interface ReviewUpdateManyWithoutProjectReviewedInput {
  create?: ReviewCreateWithoutProjectReviewedInput[]
  delete?: ReviewWhereUniqueInput[]
  connect?: ReviewWhereUniqueInput[]
  set?: ReviewWhereUniqueInput[]
  disconnect?: ReviewWhereUniqueInput[]
  update?: ReviewUpdateWithWhereUniqueWithoutProjectReviewedInput[]
  upsert?: ReviewUpsertWithWhereUniqueWithoutProjectReviewedInput[]
  deleteMany?: ReviewScalarWhereInput[]
  updateMany?: ReviewUpdateManyWithWhereNestedInput[]
}
export type ReviewUpdateManyWithoutProjectReviewedInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutProjectReviewedInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ReviewUpdateWithWhereUniqueWithoutProjectReviewedInput {
  where?: ReviewWhereUniqueInput
  data?: ReviewUpdateWithoutProjectReviewedDataInput
}
export type ReviewUpdateWithWhereUniqueWithoutProjectReviewedInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutProjectReviewedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ReviewUpdateWithoutProjectReviewedDataInput {
  name?: string | null
  rKey?: string | null
  text?: string | null
  timestamp?: string | null
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserUpdateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  DislikedBy?: UserUpdateManyWithoutDislikedReviewsInput | null
  Author?: UserUpdateOneRequiredWithoutReviewListInput | null
}
export type ReviewUpdateWithoutProjectReviewedDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutProjectReviewedDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  
export interface ReviewUpsertWithWhereUniqueWithoutProjectReviewedInput {
  where?: ReviewWhereUniqueInput
  update?: ReviewUpdateWithoutProjectReviewedDataInput
  create?: ReviewCreateWithoutProjectReviewedInput
}
export type ReviewUpsertWithWhereUniqueWithoutProjectReviewedInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutProjectReviewedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ReviewScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  rKey?: string | null
  rKey_not?: string | null
  rKey_in?: string[]
  rKey_not_in?: string[]
  rKey_lt?: string | null
  rKey_lte?: string | null
  rKey_gt?: string | null
  rKey_gte?: string | null
  rKey_contains?: string | null
  rKey_not_contains?: string | null
  rKey_starts_with?: string | null
  rKey_not_starts_with?: string | null
  rKey_ends_with?: string | null
  rKey_not_ends_with?: string | null
  text?: string | null
  text_not?: string | null
  text_in?: string[]
  text_not_in?: string[]
  text_lt?: string | null
  text_lte?: string | null
  text_gt?: string | null
  text_gte?: string | null
  text_contains?: string | null
  text_not_contains?: string | null
  text_starts_with?: string | null
  text_not_starts_with?: string | null
  text_ends_with?: string | null
  text_not_ends_with?: string | null
  timestamp?: string | null
  timestamp_not?: string | null
  timestamp_in?: string[]
  timestamp_not_in?: string[]
  timestamp_lt?: string | null
  timestamp_lte?: string | null
  timestamp_gt?: string | null
  timestamp_gte?: string | null
  projRating?: number | null
  projRating_not?: number | null
  projRating_in?: number[]
  projRating_not_in?: number[]
  projRating_lt?: number | null
  projRating_lte?: number | null
  projRating_gt?: number | null
  projRating_gte?: number | null
  thumbsUp?: number | null
  thumbsUp_not?: number | null
  thumbsUp_in?: number[]
  thumbsUp_not_in?: number[]
  thumbsUp_lt?: number | null
  thumbsUp_lte?: number | null
  thumbsUp_gt?: number | null
  thumbsUp_gte?: number | null
  thumbsDown?: number | null
  thumbsDown_not?: number | null
  thumbsDown_in?: number[]
  thumbsDown_not_in?: number[]
  thumbsDown_lt?: number | null
  thumbsDown_lte?: number | null
  thumbsDown_gt?: number | null
  thumbsDown_gte?: number | null
  AND?: ReviewScalarWhereInput[]
  OR?: ReviewScalarWhereInput[]
  NOT?: ReviewScalarWhereInput[]
}
export type ReviewScalarWhereInputInputObject =
  | Extract<keyof ReviewScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'rKey_not', alias?: string  } 
  | { name: 'rKey_in', alias?: string  } 
  | { name: 'rKey_not_in', alias?: string  } 
  | { name: 'rKey_lt', alias?: string  } 
  | { name: 'rKey_lte', alias?: string  } 
  | { name: 'rKey_gt', alias?: string  } 
  | { name: 'rKey_gte', alias?: string  } 
  | { name: 'rKey_contains', alias?: string  } 
  | { name: 'rKey_not_contains', alias?: string  } 
  | { name: 'rKey_starts_with', alias?: string  } 
  | { name: 'rKey_not_starts_with', alias?: string  } 
  | { name: 'rKey_ends_with', alias?: string  } 
  | { name: 'rKey_not_ends_with', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'text_not', alias?: string  } 
  | { name: 'text_in', alias?: string  } 
  | { name: 'text_not_in', alias?: string  } 
  | { name: 'text_lt', alias?: string  } 
  | { name: 'text_lte', alias?: string  } 
  | { name: 'text_gt', alias?: string  } 
  | { name: 'text_gte', alias?: string  } 
  | { name: 'text_contains', alias?: string  } 
  | { name: 'text_not_contains', alias?: string  } 
  | { name: 'text_starts_with', alias?: string  } 
  | { name: 'text_not_starts_with', alias?: string  } 
  | { name: 'text_ends_with', alias?: string  } 
  | { name: 'text_not_ends_with', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'timestamp_not', alias?: string  } 
  | { name: 'timestamp_in', alias?: string  } 
  | { name: 'timestamp_not_in', alias?: string  } 
  | { name: 'timestamp_lt', alias?: string  } 
  | { name: 'timestamp_lte', alias?: string  } 
  | { name: 'timestamp_gt', alias?: string  } 
  | { name: 'timestamp_gte', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'projRating_not', alias?: string  } 
  | { name: 'projRating_in', alias?: string  } 
  | { name: 'projRating_not_in', alias?: string  } 
  | { name: 'projRating_lt', alias?: string  } 
  | { name: 'projRating_lte', alias?: string  } 
  | { name: 'projRating_gt', alias?: string  } 
  | { name: 'projRating_gte', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'thumbsUp_not', alias?: string  } 
  | { name: 'thumbsUp_in', alias?: string  } 
  | { name: 'thumbsUp_not_in', alias?: string  } 
  | { name: 'thumbsUp_lt', alias?: string  } 
  | { name: 'thumbsUp_lte', alias?: string  } 
  | { name: 'thumbsUp_gt', alias?: string  } 
  | { name: 'thumbsUp_gte', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'thumbsDown_not', alias?: string  } 
  | { name: 'thumbsDown_in', alias?: string  } 
  | { name: 'thumbsDown_not_in', alias?: string  } 
  | { name: 'thumbsDown_lt', alias?: string  } 
  | { name: 'thumbsDown_lte', alias?: string  } 
  | { name: 'thumbsDown_gt', alias?: string  } 
  | { name: 'thumbsDown_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ReviewUpdateManyWithWhereNestedInput {
  where?: ReviewScalarWhereInput
  data?: ReviewUpdateManyDataInput
}
export type ReviewUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ReviewUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ReviewUpdateManyDataInput {
  name?: string | null
  rKey?: string | null
  text?: string | null
  timestamp?: string | null
  projRating?: number | null
  thumbsUp?: number | null
  thumbsDown?: number | null
}
export type ReviewUpdateManyDataInputInputObject =
  | Extract<keyof ReviewUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  
export interface UserUpdateManyWithoutRatedProjectsInput {
  create?: UserCreateWithoutRatedProjectsInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  update?: UserUpdateWithWhereUniqueWithoutRatedProjectsInput[]
  upsert?: UserUpsertWithWhereUniqueWithoutRatedProjectsInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyWithoutRatedProjectsInputInputObject =
  | Extract<keyof UserUpdateManyWithoutRatedProjectsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueWithoutRatedProjectsInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateWithoutRatedProjectsDataInput
}
export type UserUpdateWithWhereUniqueWithoutRatedProjectsInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueWithoutRatedProjectsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateWithoutRatedProjectsDataInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewUpdateManyWithoutAuthorInput | null
  LikedReviews?: ReviewUpdateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewUpdateManyWithoutDislikedByInput | null
  Projects?: ProjectUpdateManyWithoutUserInput | null
}
export type UserUpdateWithoutRatedProjectsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutRatedProjectsDataInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'Projects', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueWithoutRatedProjectsInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateWithoutRatedProjectsDataInput
  create?: UserCreateWithoutRatedProjectsInput
}
export type UserUpsertWithWhereUniqueWithoutRatedProjectsInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueWithoutRatedProjectsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  thirdPartyUID?: string | null
  thirdPartyUID_not?: string | null
  thirdPartyUID_in?: string[]
  thirdPartyUID_not_in?: string[]
  thirdPartyUID_lt?: string | null
  thirdPartyUID_lte?: string | null
  thirdPartyUID_gt?: string | null
  thirdPartyUID_gte?: string | null
  thirdPartyUID_contains?: string | null
  thirdPartyUID_not_contains?: string | null
  thirdPartyUID_starts_with?: string | null
  thirdPartyUID_not_starts_with?: string | null
  thirdPartyUID_ends_with?: string | null
  thirdPartyUID_not_ends_with?: string | null
  firebaseUID?: string | null
  firebaseUID_not?: string | null
  firebaseUID_in?: string[]
  firebaseUID_not_in?: string[]
  firebaseUID_lt?: string | null
  firebaseUID_lte?: string | null
  firebaseUID_gt?: string | null
  firebaseUID_gte?: string | null
  firebaseUID_contains?: string | null
  firebaseUID_not_contains?: string | null
  firebaseUID_starts_with?: string | null
  firebaseUID_not_starts_with?: string | null
  firebaseUID_ends_with?: string | null
  firebaseUID_not_ends_with?: string | null
  username?: string | null
  username_not?: string | null
  username_in?: string[]
  username_not_in?: string[]
  username_lt?: string | null
  username_lte?: string | null
  username_gt?: string | null
  username_gte?: string | null
  username_contains?: string | null
  username_not_contains?: string | null
  username_starts_with?: string | null
  username_not_starts_with?: string | null
  username_ends_with?: string | null
  username_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  userProfileImage?: string | null
  userProfileImage_not?: string | null
  userProfileImage_in?: string[]
  userProfileImage_not_in?: string[]
  userProfileImage_lt?: string | null
  userProfileImage_lte?: string | null
  userProfileImage_gt?: string | null
  userProfileImage_gte?: string | null
  userProfileImage_contains?: string | null
  userProfileImage_not_contains?: string | null
  userProfileImage_starts_with?: string | null
  userProfileImage_not_starts_with?: string | null
  userProfileImage_ends_with?: string | null
  userProfileImage_not_ends_with?: string | null
  bio?: string | null
  bio_not?: string | null
  bio_in?: string[]
  bio_not_in?: string[]
  bio_lt?: string | null
  bio_lte?: string | null
  bio_gt?: string | null
  bio_gte?: string | null
  bio_contains?: string | null
  bio_not_contains?: string | null
  bio_starts_with?: string | null
  bio_not_starts_with?: string | null
  bio_ends_with?: string | null
  bio_not_ends_with?: string | null
  privilege?: string | null
  privilege_not?: string | null
  privilege_in?: string[]
  privilege_not_in?: string[]
  privilege_lt?: string | null
  privilege_lte?: string | null
  privilege_gt?: string | null
  privilege_gte?: string | null
  privilege_contains?: string | null
  privilege_not_contains?: string | null
  privilege_starts_with?: string | null
  privilege_not_starts_with?: string | null
  privilege_ends_with?: string | null
  privilege_not_ends_with?: string | null
  stripeId?: string | null
  stripeId_not?: string | null
  stripeId_in?: string[]
  stripeId_not_in?: string[]
  stripeId_lt?: string | null
  stripeId_lte?: string | null
  stripeId_gt?: string | null
  stripeId_gte?: string | null
  stripeId_contains?: string | null
  stripeId_not_contains?: string | null
  stripeId_starts_with?: string | null
  stripeId_not_starts_with?: string | null
  stripeId_ends_with?: string | null
  stripeId_not_ends_with?: string | null
  accountType?: string | null
  accountType_not?: string | null
  accountType_in?: string[]
  accountType_not_in?: string[]
  accountType_lt?: string | null
  accountType_lte?: string | null
  accountType_gt?: string | null
  accountType_gte?: string | null
  accountType_contains?: string | null
  accountType_not_contains?: string | null
  accountType_starts_with?: string | null
  accountType_not_starts_with?: string | null
  accountType_ends_with?: string | null
  accountType_not_ends_with?: string | null
  AND?: UserScalarWhereInput[]
  OR?: UserScalarWhereInput[]
  NOT?: UserScalarWhereInput[]
}
export type UserScalarWhereInputInputObject =
  | Extract<keyof UserScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'thirdPartyUID_not', alias?: string  } 
  | { name: 'thirdPartyUID_in', alias?: string  } 
  | { name: 'thirdPartyUID_not_in', alias?: string  } 
  | { name: 'thirdPartyUID_lt', alias?: string  } 
  | { name: 'thirdPartyUID_lte', alias?: string  } 
  | { name: 'thirdPartyUID_gt', alias?: string  } 
  | { name: 'thirdPartyUID_gte', alias?: string  } 
  | { name: 'thirdPartyUID_contains', alias?: string  } 
  | { name: 'thirdPartyUID_not_contains', alias?: string  } 
  | { name: 'thirdPartyUID_starts_with', alias?: string  } 
  | { name: 'thirdPartyUID_not_starts_with', alias?: string  } 
  | { name: 'thirdPartyUID_ends_with', alias?: string  } 
  | { name: 'thirdPartyUID_not_ends_with', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'firebaseUID_not', alias?: string  } 
  | { name: 'firebaseUID_in', alias?: string  } 
  | { name: 'firebaseUID_not_in', alias?: string  } 
  | { name: 'firebaseUID_lt', alias?: string  } 
  | { name: 'firebaseUID_lte', alias?: string  } 
  | { name: 'firebaseUID_gt', alias?: string  } 
  | { name: 'firebaseUID_gte', alias?: string  } 
  | { name: 'firebaseUID_contains', alias?: string  } 
  | { name: 'firebaseUID_not_contains', alias?: string  } 
  | { name: 'firebaseUID_starts_with', alias?: string  } 
  | { name: 'firebaseUID_not_starts_with', alias?: string  } 
  | { name: 'firebaseUID_ends_with', alias?: string  } 
  | { name: 'firebaseUID_not_ends_with', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'username_not', alias?: string  } 
  | { name: 'username_in', alias?: string  } 
  | { name: 'username_not_in', alias?: string  } 
  | { name: 'username_lt', alias?: string  } 
  | { name: 'username_lte', alias?: string  } 
  | { name: 'username_gt', alias?: string  } 
  | { name: 'username_gte', alias?: string  } 
  | { name: 'username_contains', alias?: string  } 
  | { name: 'username_not_contains', alias?: string  } 
  | { name: 'username_starts_with', alias?: string  } 
  | { name: 'username_not_starts_with', alias?: string  } 
  | { name: 'username_ends_with', alias?: string  } 
  | { name: 'username_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'userProfileImage_not', alias?: string  } 
  | { name: 'userProfileImage_in', alias?: string  } 
  | { name: 'userProfileImage_not_in', alias?: string  } 
  | { name: 'userProfileImage_lt', alias?: string  } 
  | { name: 'userProfileImage_lte', alias?: string  } 
  | { name: 'userProfileImage_gt', alias?: string  } 
  | { name: 'userProfileImage_gte', alias?: string  } 
  | { name: 'userProfileImage_contains', alias?: string  } 
  | { name: 'userProfileImage_not_contains', alias?: string  } 
  | { name: 'userProfileImage_starts_with', alias?: string  } 
  | { name: 'userProfileImage_not_starts_with', alias?: string  } 
  | { name: 'userProfileImage_ends_with', alias?: string  } 
  | { name: 'userProfileImage_not_ends_with', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'bio_not', alias?: string  } 
  | { name: 'bio_in', alias?: string  } 
  | { name: 'bio_not_in', alias?: string  } 
  | { name: 'bio_lt', alias?: string  } 
  | { name: 'bio_lte', alias?: string  } 
  | { name: 'bio_gt', alias?: string  } 
  | { name: 'bio_gte', alias?: string  } 
  | { name: 'bio_contains', alias?: string  } 
  | { name: 'bio_not_contains', alias?: string  } 
  | { name: 'bio_starts_with', alias?: string  } 
  | { name: 'bio_not_starts_with', alias?: string  } 
  | { name: 'bio_ends_with', alias?: string  } 
  | { name: 'bio_not_ends_with', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'privilege_not', alias?: string  } 
  | { name: 'privilege_in', alias?: string  } 
  | { name: 'privilege_not_in', alias?: string  } 
  | { name: 'privilege_lt', alias?: string  } 
  | { name: 'privilege_lte', alias?: string  } 
  | { name: 'privilege_gt', alias?: string  } 
  | { name: 'privilege_gte', alias?: string  } 
  | { name: 'privilege_contains', alias?: string  } 
  | { name: 'privilege_not_contains', alias?: string  } 
  | { name: 'privilege_starts_with', alias?: string  } 
  | { name: 'privilege_not_starts_with', alias?: string  } 
  | { name: 'privilege_ends_with', alias?: string  } 
  | { name: 'privilege_not_ends_with', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'stripeId_not', alias?: string  } 
  | { name: 'stripeId_in', alias?: string  } 
  | { name: 'stripeId_not_in', alias?: string  } 
  | { name: 'stripeId_lt', alias?: string  } 
  | { name: 'stripeId_lte', alias?: string  } 
  | { name: 'stripeId_gt', alias?: string  } 
  | { name: 'stripeId_gte', alias?: string  } 
  | { name: 'stripeId_contains', alias?: string  } 
  | { name: 'stripeId_not_contains', alias?: string  } 
  | { name: 'stripeId_starts_with', alias?: string  } 
  | { name: 'stripeId_not_starts_with', alias?: string  } 
  | { name: 'stripeId_ends_with', alias?: string  } 
  | { name: 'stripeId_not_ends_with', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'accountType_not', alias?: string  } 
  | { name: 'accountType_in', alias?: string  } 
  | { name: 'accountType_not_in', alias?: string  } 
  | { name: 'accountType_lt', alias?: string  } 
  | { name: 'accountType_lte', alias?: string  } 
  | { name: 'accountType_gt', alias?: string  } 
  | { name: 'accountType_gte', alias?: string  } 
  | { name: 'accountType_contains', alias?: string  } 
  | { name: 'accountType_not_contains', alias?: string  } 
  | { name: 'accountType_starts_with', alias?: string  } 
  | { name: 'accountType_not_starts_with', alias?: string  } 
  | { name: 'accountType_ends_with', alias?: string  } 
  | { name: 'accountType_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserUpdateManyWithWhereNestedInput {
  where?: UserScalarWhereInput
  data?: UserUpdateManyDataInput
}
export type UserUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof UserUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateManyDataInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
}
export type UserUpdateManyDataInputInputObject =
  | Extract<keyof UserUpdateManyDataInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  
export interface ProjectUpsertWithWhereUniqueWithoutUserInput {
  where?: ProjectWhereUniqueInput
  update?: ProjectUpdateWithoutUserDataInput
  create?: ProjectCreateWithoutUserInput
}
export type ProjectUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof ProjectUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  category?: string | null
  category_not?: string | null
  category_in?: string[]
  category_not_in?: string[]
  category_lt?: string | null
  category_lte?: string | null
  category_gt?: string | null
  category_gte?: string | null
  category_contains?: string | null
  category_not_contains?: string | null
  category_starts_with?: string | null
  category_not_starts_with?: string | null
  category_ends_with?: string | null
  category_not_ends_with?: string | null
  timestamp?: string | null
  timestamp_not?: string | null
  timestamp_in?: string[]
  timestamp_not_in?: string[]
  timestamp_lt?: string | null
  timestamp_lte?: string | null
  timestamp_gt?: string | null
  timestamp_gte?: string | null
  titleImg?: string | null
  titleImg_not?: string | null
  titleImg_in?: string[]
  titleImg_not_in?: string[]
  titleImg_lt?: string | null
  titleImg_lte?: string | null
  titleImg_gt?: string | null
  titleImg_gte?: string | null
  titleImg_contains?: string | null
  titleImg_not_contains?: string | null
  titleImg_starts_with?: string | null
  titleImg_not_starts_with?: string | null
  titleImg_ends_with?: string | null
  titleImg_not_ends_with?: string | null
  titleBlurb?: string | null
  titleBlurb_not?: string | null
  titleBlurb_in?: string[]
  titleBlurb_not_in?: string[]
  titleBlurb_lt?: string | null
  titleBlurb_lte?: string | null
  titleBlurb_gt?: string | null
  titleBlurb_gte?: string | null
  titleBlurb_contains?: string | null
  titleBlurb_not_contains?: string | null
  titleBlurb_starts_with?: string | null
  titleBlurb_not_starts_with?: string | null
  titleBlurb_ends_with?: string | null
  titleBlurb_not_ends_with?: string | null
  steps?: string | null
  steps_not?: string | null
  steps_in?: string[]
  steps_not_in?: string[]
  steps_lt?: string | null
  steps_lte?: string | null
  steps_gt?: string | null
  steps_gte?: string | null
  steps_contains?: string | null
  steps_not_contains?: string | null
  steps_starts_with?: string | null
  steps_not_starts_with?: string | null
  steps_ends_with?: string | null
  steps_not_ends_with?: string | null
  AND?: ProjectScalarWhereInput[]
  OR?: ProjectScalarWhereInput[]
  NOT?: ProjectScalarWhereInput[]
}
export type ProjectScalarWhereInputInputObject =
  | Extract<keyof ProjectScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'category_not', alias?: string  } 
  | { name: 'category_in', alias?: string  } 
  | { name: 'category_not_in', alias?: string  } 
  | { name: 'category_lt', alias?: string  } 
  | { name: 'category_lte', alias?: string  } 
  | { name: 'category_gt', alias?: string  } 
  | { name: 'category_gte', alias?: string  } 
  | { name: 'category_contains', alias?: string  } 
  | { name: 'category_not_contains', alias?: string  } 
  | { name: 'category_starts_with', alias?: string  } 
  | { name: 'category_not_starts_with', alias?: string  } 
  | { name: 'category_ends_with', alias?: string  } 
  | { name: 'category_not_ends_with', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'timestamp_not', alias?: string  } 
  | { name: 'timestamp_in', alias?: string  } 
  | { name: 'timestamp_not_in', alias?: string  } 
  | { name: 'timestamp_lt', alias?: string  } 
  | { name: 'timestamp_lte', alias?: string  } 
  | { name: 'timestamp_gt', alias?: string  } 
  | { name: 'timestamp_gte', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleImg_not', alias?: string  } 
  | { name: 'titleImg_in', alias?: string  } 
  | { name: 'titleImg_not_in', alias?: string  } 
  | { name: 'titleImg_lt', alias?: string  } 
  | { name: 'titleImg_lte', alias?: string  } 
  | { name: 'titleImg_gt', alias?: string  } 
  | { name: 'titleImg_gte', alias?: string  } 
  | { name: 'titleImg_contains', alias?: string  } 
  | { name: 'titleImg_not_contains', alias?: string  } 
  | { name: 'titleImg_starts_with', alias?: string  } 
  | { name: 'titleImg_not_starts_with', alias?: string  } 
  | { name: 'titleImg_ends_with', alias?: string  } 
  | { name: 'titleImg_not_ends_with', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'titleBlurb_not', alias?: string  } 
  | { name: 'titleBlurb_in', alias?: string  } 
  | { name: 'titleBlurb_not_in', alias?: string  } 
  | { name: 'titleBlurb_lt', alias?: string  } 
  | { name: 'titleBlurb_lte', alias?: string  } 
  | { name: 'titleBlurb_gt', alias?: string  } 
  | { name: 'titleBlurb_gte', alias?: string  } 
  | { name: 'titleBlurb_contains', alias?: string  } 
  | { name: 'titleBlurb_not_contains', alias?: string  } 
  | { name: 'titleBlurb_starts_with', alias?: string  } 
  | { name: 'titleBlurb_not_starts_with', alias?: string  } 
  | { name: 'titleBlurb_ends_with', alias?: string  } 
  | { name: 'titleBlurb_not_ends_with', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'steps_not', alias?: string  } 
  | { name: 'steps_in', alias?: string  } 
  | { name: 'steps_not_in', alias?: string  } 
  | { name: 'steps_lt', alias?: string  } 
  | { name: 'steps_lte', alias?: string  } 
  | { name: 'steps_gt', alias?: string  } 
  | { name: 'steps_gte', alias?: string  } 
  | { name: 'steps_contains', alias?: string  } 
  | { name: 'steps_not_contains', alias?: string  } 
  | { name: 'steps_starts_with', alias?: string  } 
  | { name: 'steps_not_starts_with', alias?: string  } 
  | { name: 'steps_ends_with', alias?: string  } 
  | { name: 'steps_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectUpdateManyWithWhereNestedInput {
  where?: ProjectScalarWhereInput
  data?: ProjectUpdateManyDataInput
}
export type ProjectUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ProjectUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProjectUpdateManyDataInput {
  name?: string | null
  key?: string | null
  category?: string | null
  timestamp?: string | null
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectUpdateratingInput | null
  steps?: string | null
}
export type ProjectUpdateManyDataInputInputObject =
  | Extract<keyof ProjectUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  
export interface ProjectUpdateManyWithoutRatedByInput {
  create?: ProjectCreateWithoutRatedByInput[]
  delete?: ProjectWhereUniqueInput[]
  connect?: ProjectWhereUniqueInput[]
  set?: ProjectWhereUniqueInput[]
  disconnect?: ProjectWhereUniqueInput[]
  update?: ProjectUpdateWithWhereUniqueWithoutRatedByInput[]
  upsert?: ProjectUpsertWithWhereUniqueWithoutRatedByInput[]
  deleteMany?: ProjectScalarWhereInput[]
  updateMany?: ProjectUpdateManyWithWhereNestedInput[]
}
export type ProjectUpdateManyWithoutRatedByInputInputObject =
  | Extract<keyof ProjectUpdateManyWithoutRatedByInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProjectUpdateWithWhereUniqueWithoutRatedByInput {
  where?: ProjectWhereUniqueInput
  data?: ProjectUpdateWithoutRatedByDataInput
}
export type ProjectUpdateWithWhereUniqueWithoutRatedByInputInputObject =
  | Extract<keyof ProjectUpdateWithWhereUniqueWithoutRatedByInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProjectUpdateWithoutRatedByDataInput {
  name?: string | null
  key?: string | null
  category?: string | null
  timestamp?: string | null
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectUpdateratingInput | null
  steps?: string | null
  User?: UserUpdateOneRequiredWithoutProjectsInput | null
  Reviews?: ReviewUpdateManyWithoutProjectReviewedInput | null
}
export type ProjectUpdateWithoutRatedByDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutRatedByDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'User', alias?: string  } 
  | { name: 'Reviews', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutProjectsInput {
  create?: UserCreateWithoutProjectsInput | null
  update?: UserUpdateWithoutProjectsDataInput | null
  upsert?: UserUpsertWithoutProjectsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutProjectsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutProjectsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutProjectsDataInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
  ReviewList?: ReviewUpdateManyWithoutAuthorInput | null
  LikedReviews?: ReviewUpdateManyWithoutLikedByInput | null
  DislikedReviews?: ReviewUpdateManyWithoutDislikedByInput | null
  RatedProjects?: ProjectUpdateManyWithoutRatedByInput | null
}
export type UserUpdateWithoutProjectsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutProjectsDataInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  | { name: 'ReviewList', alias?: string  } 
  | { name: 'LikedReviews', alias?: string  } 
  | { name: 'DislikedReviews', alias?: string  } 
  | { name: 'RatedProjects', alias?: string  } 
  
export interface UserUpsertWithoutProjectsInput {
  update?: UserUpdateWithoutProjectsDataInput
  create?: UserCreateWithoutProjectsInput
}
export type UserUpsertWithoutProjectsInputInputObject =
  | Extract<keyof UserUpsertWithoutProjectsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectUpsertWithWhereUniqueWithoutRatedByInput {
  where?: ProjectWhereUniqueInput
  update?: ProjectUpdateWithoutRatedByDataInput
  create?: ProjectCreateWithoutRatedByInput
}
export type ProjectUpsertWithWhereUniqueWithoutRatedByInputInputObject =
  | Extract<keyof ProjectUpsertWithWhereUniqueWithoutRatedByInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueWithoutDislikedReviewsInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateWithoutDislikedReviewsDataInput
  create?: UserCreateWithoutDislikedReviewsInput
}
export type UserUpsertWithWhereUniqueWithoutDislikedReviewsInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueWithoutDislikedReviewsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectUpdateOneRequiredWithoutReviewsInput {
  create?: ProjectCreateWithoutReviewsInput | null
  update?: ProjectUpdateWithoutReviewsDataInput | null
  upsert?: ProjectUpsertWithoutReviewsInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectUpdateOneRequiredWithoutReviewsInputInputObject =
  | Extract<keyof ProjectUpdateOneRequiredWithoutReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectUpdateWithoutReviewsDataInput {
  name?: string | null
  key?: string | null
  category?: string | null
  timestamp?: string | null
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectUpdateratingInput | null
  steps?: string | null
  User?: UserUpdateOneRequiredWithoutProjectsInput | null
  RatedBy?: UserUpdateManyWithoutRatedProjectsInput | null
}
export type ProjectUpdateWithoutReviewsDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutReviewsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'User', alias?: string  } 
  | { name: 'RatedBy', alias?: string  } 
  
export interface ProjectUpsertWithoutReviewsInput {
  update?: ProjectUpdateWithoutReviewsDataInput
  create?: ProjectCreateWithoutReviewsInput
}
export type ProjectUpsertWithoutReviewsInputInputObject =
  | Extract<keyof ProjectUpsertWithoutReviewsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ReviewUpsertWithWhereUniqueWithoutLikedByInput {
  where?: ReviewWhereUniqueInput
  update?: ReviewUpdateWithoutLikedByDataInput
  create?: ReviewCreateWithoutLikedByInput
}
export type ReviewUpsertWithWhereUniqueWithoutLikedByInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutLikedByInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpsertWithoutReviewListInput {
  update?: UserUpdateWithoutReviewListDataInput
  create?: UserCreateWithoutReviewListInput
}
export type UserUpsertWithoutReviewListInputInputObject =
  | Extract<keyof UserUpsertWithoutReviewListInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ReviewUpsertWithWhereUniqueWithoutDislikedByInput {
  where?: ReviewWhereUniqueInput
  update?: ReviewUpdateWithoutDislikedByDataInput
  create?: ReviewCreateWithoutDislikedByInput
}
export type ReviewUpsertWithWhereUniqueWithoutDislikedByInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutDislikedByInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueWithoutLikedReviewsInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateWithoutLikedReviewsDataInput
  create?: UserCreateWithoutLikedReviewsInput
}
export type UserUpsertWithWhereUniqueWithoutLikedReviewsInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueWithoutLikedReviewsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  where?: ReviewWhereUniqueInput
  update?: ReviewUpdateWithoutAuthorDataInput
  create?: ReviewCreateWithoutAuthorInput
}
export type ReviewUpsertWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  thirdPartyUID?: string | null
  firebaseUID?: string | null
  username?: string | null
  email?: string | null
  userProfileImage?: string | null
  bio?: string | null
  privilege?: string | null
  stripeId?: string | null
  accountType?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'thirdPartyUID', alias?: string  } 
  | { name: 'firebaseUID', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'userProfileImage', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'stripeId', alias?: string  } 
  | { name: 'accountType', alias?: string  } 
  
export interface ProjectCreateInput {
  name?: string
  key?: string | null
  category?: string
  timestamp?: string
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectCreateratingInput | null
  steps?: string | null
  User?: UserCreateOneWithoutProjectsInput
  Reviews?: ReviewCreateManyWithoutProjectReviewedInput | null
  RatedBy?: UserCreateManyWithoutRatedProjectsInput | null
}
export type ProjectCreateInputInputObject =
  | Extract<keyof ProjectCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'User', alias?: string  } 
  | { name: 'Reviews', alias?: string  } 
  | { name: 'RatedBy', alias?: string  } 
  
export interface ProjectUpdateInput {
  name?: string | null
  key?: string | null
  category?: string | null
  timestamp?: string | null
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectUpdateratingInput | null
  steps?: string | null
  User?: UserUpdateOneRequiredWithoutProjectsInput | null
  Reviews?: ReviewUpdateManyWithoutProjectReviewedInput | null
  RatedBy?: UserUpdateManyWithoutRatedProjectsInput | null
}
export type ProjectUpdateInputInputObject =
  | Extract<keyof ProjectUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  | { name: 'User', alias?: string  } 
  | { name: 'Reviews', alias?: string  } 
  | { name: 'RatedBy', alias?: string  } 
  
export interface ProjectUpdateManyMutationInput {
  name?: string | null
  key?: string | null
  category?: string | null
  timestamp?: string | null
  titleImg?: string | null
  titleBlurb?: string | null
  rating?: ProjectUpdateratingInput | null
  steps?: string | null
}
export type ProjectUpdateManyMutationInputInputObject =
  | Extract<keyof ProjectUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'titleImg', alias?: string  } 
  | { name: 'titleBlurb', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'steps', alias?: string  } 
  
export interface ReviewCreateInput {
  name?: string
  rKey?: string | null
  text?: string
  timestamp?: string
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserCreateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  DislikedBy?: UserCreateManyWithoutDislikedReviewsInput | null
  Author?: UserCreateOneWithoutReviewListInput
  ProjectReviewed?: ProjectCreateOneWithoutReviewsInput
}
export type ReviewCreateInputInputObject =
  | Extract<keyof ReviewCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface ReviewUpdateInput {
  name?: string | null
  rKey?: string | null
  text?: string | null
  timestamp?: string | null
  projRating?: number | null
  thumbsUp?: number | null
  LikedBy?: UserUpdateManyWithoutLikedReviewsInput | null
  thumbsDown?: number | null
  DislikedBy?: UserUpdateManyWithoutDislikedReviewsInput | null
  Author?: UserUpdateOneRequiredWithoutReviewListInput | null
  ProjectReviewed?: ProjectUpdateOneRequiredWithoutReviewsInput | null
}
export type ReviewUpdateInputInputObject =
  | Extract<keyof ReviewUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'LikedBy', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  | { name: 'DislikedBy', alias?: string  } 
  | { name: 'Author', alias?: string  } 
  | { name: 'ProjectReviewed', alias?: string  } 
  
export interface ReviewUpdateManyMutationInput {
  name?: string | null
  rKey?: string | null
  text?: string | null
  timestamp?: string | null
  projRating?: number | null
  thumbsUp?: number | null
  thumbsDown?: number | null
}
export type ReviewUpdateManyMutationInputInputObject =
  | Extract<keyof ReviewUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'rKey', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'timestamp', alias?: string  } 
  | { name: 'projRating', alias?: string  } 
  | { name: 'thumbsUp', alias?: string  } 
  | { name: 'thumbsDown', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProjectWhereInput | null
  AND?: ProjectSubscriptionWhereInput[]
  OR?: ProjectSubscriptionWhereInput[]
  NOT?: ProjectSubscriptionWhereInput[]
}
export type ProjectSubscriptionWhereInputInputObject =
  | Extract<keyof ProjectSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ReviewSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ReviewWhereInput | null
  AND?: ReviewSubscriptionWhereInput[]
  OR?: ReviewSubscriptionWhereInput[]
  NOT?: ReviewSubscriptionWhereInput[]
}
export type ReviewSubscriptionWhereInputInputObject =
  | Extract<keyof ReviewSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type ReviewOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'rKey_ASC'
  | 'rKey_DESC'
  | 'text_ASC'
  | 'text_DESC'
  | 'timestamp_ASC'
  | 'timestamp_DESC'
  | 'projRating_ASC'
  | 'projRating_DESC'
  | 'thumbsUp_ASC'
  | 'thumbsUp_DESC'
  | 'thumbsDown_ASC'
  | 'thumbsDown_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'thirdPartyUID_ASC'
  | 'thirdPartyUID_DESC'
  | 'firebaseUID_ASC'
  | 'firebaseUID_DESC'
  | 'username_ASC'
  | 'username_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'userProfileImage_ASC'
  | 'userProfileImage_DESC'
  | 'bio_ASC'
  | 'bio_DESC'
  | 'privilege_ASC'
  | 'privilege_DESC'
  | 'stripeId_ASC'
  | 'stripeId_DESC'
  | 'accountType_ASC'
  | 'accountType_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ProjectOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'key_ASC'
  | 'key_DESC'
  | 'category_ASC'
  | 'category_DESC'
  | 'timestamp_ASC'
  | 'timestamp_DESC'
  | 'titleImg_ASC'
  | 'titleImg_DESC'
  | 'titleBlurb_ASC'
  | 'titleBlurb_DESC'
  | 'steps_ASC'
  | 'steps_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  