type Query {



  
  
  
  
}
#Types needed:  Users, Projects, Reviews, Comments

  type Stars {
    number:FLOAT! # @defaultValue('1')
  }

  type Privileges {
  isModerator:Boolean!
  isAdmin:Boolean!
  isPlebian:Boolean!
}
type Mutation {

}

type User {
  id: ID!
  projects: [Project!]!
  privileges: [Privilege!]!
  makerRating: Float
  ReviewerThumbs: INT! @defaultValue(â€˜1)
  ProjectList:[Project!]!
  ReviewList:[Review!]!
  Bio:Bio
  Settings:Settings
  Billing:Billing
  url: String!
  password: String! # @unique
  email: String! # @unique
}
  
type StepArray {[
  textBlurbs: String
  imgUrls: String
]
}
type Project {
 id: ID!
 name: String!
 category: String!
 stars: Stars
 timestamp: String!
 EditedAt: String!
 author: User!
 titleImg: String!
 titleBlurb: String!
 Steps:StepArray
 Reviews:[Review]
}
  
type Review {
  Id: ID!
  Title: String!
  Author: User!
  Stars: Stars
  Text: String!
  EditedAt: String!
  ReviewThumbsUp: INT
  ReviewThumbsDown: INT
  Comments: [Comment]
}

type Comment {
  id: ID!
  editedAt: DateTime!
  text: String!
  user: User!
}

type Privilege{
  id: ID!
  name: String!
}

type Billing{
amtPaid:Float
datePaid:String
orderNumber:INT
description:String
}



