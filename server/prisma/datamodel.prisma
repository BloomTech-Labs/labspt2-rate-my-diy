# These type-definitions allow the prisma client to speak to the DB 
# according to the types defined in schema.graphql.
# They also allow prisma to generate crud operations for us.

type Privileges {
 isModerator: Boolean!
 isAdmin: Boolean!
 isPlebian: Boolean!
}

type User {
  id: ID! @unique
  makerRating: Float
  reviewerThumbs: Int @default(value: 1)
  url: String
  username: String! @unique
  password: String! 
  email: String! @unique
  ReviewList: [Review!]
  # Bio: Bio
  # enum data type required for Bio
  Projects: [Project!] @relation(name: "UserProjects")
  Privileges: [Privilege!]
}
  
type StepArray {
  textBlurbs: String
  imgUrls: String
}

type Project {
 id: ID! @unique
 name: String!
 category: String!
 timestamp: String!
 titleImg: String!
 titleBlurb: String!
 rating: Float! @default(value: 1)
 authorName: String!
 Steps: [StepArray!]!
 Reviews:[Review!]!
}
  
type Review {
  id: ID! @unique 
  title: String!
  text: String!
  editedAt: String!
  rating: Float! @default(value: 1)
  reviewThumbsUp: Int
  reviewThumbsDown: Int
  Comments: [Comment]
  Author: User!
}

type Comment {
  id: ID! @unique
  editedAt: DateTime!
  text: String!
  User: User!
}

type Privilege {
  id: ID! @unique
  name: String!
}




